<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License.
 * The Original Code is Openbravo ERP.
 * The Initial Developer of the Original Code is Openbravo SLU
 * All portions are Copyright (C) 2012 Openbravo SLU
 * All Rights Reserved.
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->
<SqlClass name="UpdateADClientInfoData" package="org.openbravo.modulescript">
  <SqlClassComment></SqlClassComment>
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      SELECT '' as ad_client_id, '' as UUID, '' as clientname
      FROM DUAL
      ]]>
    </Sql>
  </SqlMethod>
  <SqlMethod name="update" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      UPDATE AD_CLIENTINFO SET AD_TREE_CAMPAIGN_ID = 
        (SELECT AD_TREE_ID FROM AD_TREE T 
         WHERE TREETYPE = 'MC' AND AD_CLIENT_ID = ?) 
        WHERE AD_CLIENT_ID = ? 
      ]]>
    </Sql>
    <Parameter name="clientID"/>
    <Parameter name="clientID"/>
  </SqlMethod>
  <SqlMethod name="selectClientsID" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      SELECT AD_CLIENT_ID 
      FROM AD_CLIENTINFO CI
      WHERE CI.AD_TREE_CAMPAIGN_ID IS NULL AND CI.AD_CLIENT_ID <> '0'
      ]]>
    </Sql>
  </SqlMethod>
  <SqlMethod name="getUUID" type="preparedStatement" return="string">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      SELECT get_uuid() as UUID
      FROM dual
      ]]></Sql>
  </SqlMethod>
  <SqlMethod name="selectClientsMissingTree" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      SELECT C.AD_CLIENT_ID, C.NAME as clientname
      FROM AD_CLIENTINFO CI INNER JOIN AD_CLIENT C ON (C.AD_CLIENT_ID = CI.AD_CLIENT_ID)
      WHERE CI.AD_CLIENT_ID <> '0'
      AND 1=1 AND CI.AD_TREE_ASSET_ID IS NULL
      ]]>
    </Sql>
    <Parameter name="columnname" optional="false" type="replace" after="AND 1=1 AND CI." text="AD_TREE_ASSET_ID"/>
  </SqlMethod>
  <SqlMethod name="createTree" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      INSERT INTO ad_tree(
            ad_tree_id, ad_client_id, ad_org_id, created, createdby, updated, 
            updatedby, isactive, name, description, treetype, isallnodes)
      VALUES (?, ?, '0', now(), '0', now(), 
            '0', 'Y', ?, ?, ?, 'Y')
      ]]></Sql>
    <Parameter name="treeId"/>
    <Parameter name="clientId"/>
    <Parameter name="nameAndDesc"/>
    <Parameter name="nameAndDesc"/>
    <Parameter name="treetype"/>
  </SqlMethod>
  <SqlMethod name="updateClientTree" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      UPDATE AD_CLIENTINFO 
      SET AD_TREE_ASSET_ID = ? 
      WHERE AD_CLIENT_ID = ? 
      ]]>
    </Sql>
    <Parameter name="columnname" optional="false" type="replace" after="SET " text="AD_TREE_ASSET_ID"/>
    <Parameter name="treeID"/>
    <Parameter name="clientID"/>
  </SqlMethod>
  <SqlMethod name="selectClientsWithoutTree" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      SELECT AD_CLIENT_ID 
      FROM AD_CLIENTINFO CI
      WHERE CI.AD_TREE_PRODUCT_CATEGORY_ID IS NULL 
      AND CI.AD_CLIENT_ID <> '0'
      ]]>
    </Sql>
    <Parameter name="columnname" optional="false" type="replace" after="WHERE CI." text="AD_TREE_PRODUCT_CATEGORY_ID"/>
  </SqlMethod>
  <SqlMethod name="updateClientTreeAuto" type="preparedStatement" return="rowcount">
    <SqlMethodComment>Updates client tree info for already created trees</SqlMethodComment>
    <Sql><![CDATA[
      UPDATE AD_CLIENTINFO 
      SET AD_TREE_PRODUCT_CATEGORY_ID = 
        (SELECT AD_TREE_ID FROM AD_TREE T 
         WHERE TREETYPE = ? AND AD_CLIENT_ID = ?) 
        WHERE AD_CLIENT_ID = ? 
      ]]>
    </Sql>
    <Parameter name="columnname" optional="false" type="replace" after="SET " text="AD_TREE_PRODUCT_CATEGORY_ID"/>
    <Parameter name="treetype"/>
    <Parameter name="clientID"/>
    <Parameter name="clientID"/>
  </SqlMethod>
  <SqlMethod name="insertMissingTreeNodes" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
    INSERT
    INTO AD_TreeNode
      (
        ad_treeNode_Id, AD_Client_ID, AD_Org_ID, IsActive,
        Created, CreatedBy, Updated,
        UpdatedBy, AD_Tree_ID, Node_ID,
        Parent_ID, SeqNo
      )
      SELECT get_uuid(), a.ad_client_id, a.ad_org_id, a.isactive,
	now(), '0', now(), 
	'0', (SELECT ad_tree_id from ad_tree where treetype = ? AND ad_tree.ad_client_id = a.ad_client_id) AS treeID, a.M_PRODUCT_CATEGORY_id,
	'0', 999
      FROM M_PRODUCT_CATEGORY a
      WHERE NOT EXISTS (SELECT 1 
                        FROM AD_TREENODE tn INNER JOIN AD_TREE t ON (t.ad_tree_id=tn.ad_tree_id)
                        WHERE t.treetype = ?
		        AND 1=1 AND a.M_PRODUCT_CATEGORY_id = tn.node_id)
      ]]>
    </Sql>
    <Parameter name="treetype"/>
    <Parameter name="tablename" optional="false" type="replace" after="AS treeID, a." text="M_PRODUCT_CATEGORY"/>
    <Parameter name="tablename" optional="false" type="replace" after="FROM " text="M_PRODUCT_CATEGORY"/>
    <Parameter name="treetype"/>
    <Parameter name="tablename" optional="false" type="replace" after="AND 1=1 AND a." text="M_PRODUCT_CATEGORY"/>
  </SqlMethod>
</SqlClass>
