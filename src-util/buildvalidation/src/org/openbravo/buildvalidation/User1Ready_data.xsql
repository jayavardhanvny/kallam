<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License.
 * The Original Code is Openbravo ERP.
 * The Initial Developer of the Original Code is Openbravo SLU
 * All portions are Copyright (C) 2013 Openbravo SLU
 * All Rights Reserved.
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->


<SqlClass name="User1ReadyData" package="org.openbravo.buildvalidation">
   <SqlMethod name="select" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT  1 as records
          FROM dual
    ]]></Sql>
   </SqlMethod>
   <SqlMethod name="tableExists" type="preparedStatement" return="boolean">
      <SqlMethodComment>Checks if table exists in AD.</SqlMethodComment>
      <Sql><![CDATA[
             select tablename
             from ad_table
             where lower(tablename) = ?
      ]]></Sql>
     <Parameter name="tableName"/>
   </SqlMethod>
   <SqlMethod name="columnExists" type="preparedStatement" return="boolean">
      <SqlMethodComment>Checks if table exists in AD.</SqlMethodComment>
      <Sql><![CDATA[
             select columnname
             from ad_column, ad_table
             where ad_column.ad_table_id = ad_table.ad_table_id
             and lower(columnname) = ?
             and lower(tablename) = ?
      ]]></Sql>
     <Parameter name="columnname"/>
     <Parameter name="tablename"/>
   </SqlMethod>
   <SqlMethod name="countUser1Usage" type="preparedStatement" return="string">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT COUNT(1) AS RECORDS
        FROM DUAL
        WHERE EXISTS (SELECT 1 FROM A_Amortization WHERE  USER1_ID IS NOT NULL)
      ]]></Sql>
     <Parameter name="tableName" type="replace" optional="true" after="SELECT 1 FROM " text="A_Amortization"/>
     <Parameter name="columnName" type="replace" optional="true" after="WHERE  " text="USER1_ID"/>
   </SqlMethod>
</SqlClass>
