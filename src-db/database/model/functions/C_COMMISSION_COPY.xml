<?xml version="1.0"?>
  <database name="FUNCTION C_COMMISSION_COPY">
    <function name="C_COMMISSION_COPY" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
  * The contents of this file are subject to the Compiere Public
  * License 1.1 ("License"); You may not use this file except in
  * compliance with the License. You may obtain a copy of the License in
  * the legal folder of your Openbravo installation.
  * Software distributed under the License is distributed on an
  * "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  * implied. See the License for the specific language governing rights
  * and limitations under the License.
  * The Original Code is  Compiere  ERP &  Business Solution
  * The Initial Developer of the Original Code is Jorg Janke and ComPiere, Inc.
  * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke,
  * parts created by ComPiere are Copyright (C) ComPiere, Inc.;
  * All Rights Reserved.
  * Contributor(s): Openbravo SLU
  * Contributions are Copyright (C) 2001-2008 Openbravo, S.L.U.
  *
  * Specifically, this derivative work is based upon the following Compiere
  * file and version.
  *************************************************************************
  * $Id: C_Commission_Copy.sql,v 1.2 2002/05/22 02:48:28 jjanke Exp $
  ***
  * Title: Copy lines from another Commission
  * Description:
  ************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    -- Parameter Variables
    p_C_Commission_ID VARCHAR2(32);
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      IF(Cur_Parameter.ParameterName='C_Commission_ID') THEN
        p_C_Commission_ID:=Cur_Parameter.P_String;
        DBMS_OUTPUT.PUT_LINE('  C_Commission_ID=' || p_C_Commission_ID) ;
      ELSE
        DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
      END IF;
    END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
    -- Copy Lines from p_C_Commission_ID to Record_ID
    DECLARE
      CUR_Commission RECORD;
      v_NextNo VARCHAR2(32);
    BEGIN
      FOR CUR_Commission IN
        (SELECT *
        FROM C_CommissionLine
        WHERE C_Commission_ID=p_C_Commission_ID
          AND IsActive='Y'
        )
      LOOP
        v_ResultStr:='CopyLines';
        -- Get SeqNo
        AD_Sequence_Next('C_CommissionLine', CUR_Commission.AD_Client_ID, v_NextNo) ;
        -- Insert
        INSERT
        INTO C_CommissionLine
          (
            C_CommissionLine_ID, C_Commission_ID,
            AD_Client_ID, AD_Org_ID,
            IsActive, Created,
            CreatedBy, Updated,
            UpdatedBy, Line,
            Description, AmtSubtract,
            AmtMultiplier, QtySubtract,
            QtyMultiplier, IsPositiveOnly,
            M_Product_Category_ID, M_Product_ID,
            C_BP_Group_ID, C_BPartner_ID,
            C_SalesRegion_ID
          )
          VALUES
          (
            v_NextNo, v_Record_ID,
            CUR_Commission.AD_Client_ID, CUR_Commission.AD_Org_ID,
             'Y', now(),
            '0', now(),
            '0', CUR_Commission.Line,
            CUR_Commission.Description, CUR_Commission.AmtSubtract,
            CUR_Commission.AmtMultiplier, CUR_Commission.QtySubtract,
            CUR_Commission.QtyMultiplier, CUR_Commission.IsPositiveOnly,
            CUR_Commission.M_Product_Category_ID, CUR_Commission.M_Product_ID,
            CUR_Commission.C_BP_Group_ID, CUR_Commission.C_BPartner_ID,
            CUR_Commission.C_SalesRegion_ID
          )
          ;
      END LOOP;
    END;
    --<<FINISH_PROCESS>>
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END C_COMMISSION_COPY
]]></body>
    </function>
  </database>
