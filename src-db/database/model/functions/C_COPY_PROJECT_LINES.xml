<?xml version="1.0"?>
  <database name="FUNCTION C_COPY_PROJECT_LINES">
    <function name="C_COPY_PROJECT_LINES" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2006 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    -- Parameter Variables
    v_NoOfLines NUMBER:=0;
    v_NextNo VARCHAR2(32);
    -- Copy
    Cur_ProjectLine RECORD;
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
    END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
    -- Record_ID is the Tab_ID to copy to
    v_ResultStr:='Copying';
    FOR Cur_ProjectLine IN
      (SELECT C_ProjectLine.*
      FROM C_ProjectLine,
        C_Project,
        C_ProjectProposal
      WHERE C_Project.C_PROJECT_ID=C_ProjectLine.C_PROJECT_ID
        AND C_Project.C_PROJECT_ID=C_ProjectProposal.C_PROJECT_ID
        AND C_ProjectProposal.C_PROJECTPROPOSAL_ID=v_Record_ID
      )
    LOOP
      -- Get next no
      AD_Sequence_Next('C_ProjectProposalLine', Cur_ProjectLine.AD_Client_ID, v_NextNo) ;
      -- Insert
      INSERT
      INTO C_PROJECTPROPOSALLINE
        (
          C_PROJECTPROPOSALLINE_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE,
          CREATED, CREATEDBY, UPDATED, UPDATEDBY,
          C_PROJECTPROPOSAL_ID, LINENO, M_PRODUCT_ID, QTY,
          PRICE, DESCRIPTION, PRODUCT_VALUE, PRODUCT_NAME,
          PRODUCT_DESCRIPTION
        )
        VALUES
        (
          v_NextNo, Cur_ProjectLine.AD_Client_ID, Cur_ProjectLine.AD_Org_ID, Cur_ProjectLine.IsActive,
          now(), '0', now(), '0',
          v_Record_ID, Cur_ProjectLine.Line, Cur_ProjectLine.M_Product_ID, Cur_ProjectLine.PlannedQty,
          Cur_ProjectLine.PlannedPrice, Cur_ProjectLine.Description, Cur_ProjectLine.Product_Value, Cur_ProjectLine.Product_Name,
          Cur_ProjectLine.Product_Description
        )
        ;
      -- update translation
      --
      v_NoOfLines:=v_NoOfLines + 1;
    END LOOP;
    v_Message:='@Copied@=' || v_NoOfLines ;
    --<<FINISH_PROCESS>>
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END C_COPY_PROJECT_LINES
]]></body>
    </function>
  </database>
