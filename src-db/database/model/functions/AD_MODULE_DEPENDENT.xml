<?xml version="1.0"?>
  <database name="FUNCTION AD_MODULE_DEPENDENT">
    <function name="AD_MODULE_DEPENDENT" type="CHAR">
      <parameter name="p_childmodule_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_parentmodule_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2008 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
/*
  Checks whether p_childModule_ID is a dependency for p_parentModule_ID if it is
  the function returns 'Y' other case 'N'.
  
  Example:
    core -> ID = 0
    mod1 -> ID = 100
    
    mod1 depends on core so AD_MODULE_DEPENDENT('0','100')='Y'
*/

  v_childVersion     VARCHAR2(10);  

  TYPE RECORD IS REF CURSOR;
  Cur_Dependencies RECORD;
BEGIN
  IF p_childModule_ID = p_parentModule_ID THEN
    RETURN 'Y';
  END IF;
  
  SELECT VERSION
    INTO v_childVersion
    FROM AD_Module
   WHERE AD_Module_ID = p_childModule_ID;
  
  FOR Cur_Dependencies IN (SELECT *
                             FROM AD_Module_Dependency
                            WHERE AD_Module_ID = p_parentModule_ID) LOOP
    IF Cur_Dependencies.IsIncluded='N' --Check just dependencies, not inclusions
       AND Cur_Dependencies.AD_Dependent_Module_ID = p_childModule_ID 
       AND ((Cur_Dependencies.endVersion IS NULL AND Cur_Dependencies.startVersion = v_childVersion)
         OR (Cur_Dependencies.endVersion IS NOT NULL AND v_childVersion BETWEEN Cur_Dependencies.startVersion AND Cur_Dependencies.endVersion)) THEN
      RETURN 'Y';
    END IF;
    IF AD_MODULE_DEPENDENT(p_childModule_ID, Cur_Dependencies.AD_Dependent_Module_ID) = 'Y' THEN --check it recursively, to find dependencies in child modules
      RETURN 'Y';
    END IF;
     
  END LOOP;
  RETURN 'N';
  EXCEPTION WHEN OTHERS THEN RETURN 'N';
END AD_MODULE_DEPENDENT
]]></body>
    </function>
  </database>
