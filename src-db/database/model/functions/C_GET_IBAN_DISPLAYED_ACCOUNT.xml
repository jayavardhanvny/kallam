<?xml version="1.0"?>
  <database name="FUNCTION C_GET_IBAN_DISPLAYED_ACCOUNT">
    <function name="C_GET_IBAN_DISPLAYED_ACCOUNT" type="NVARCHAR">
      <parameter name="p_iban" type="NVARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_country_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License.
 * The Original Code is Openbravo ERP.
 * The Initial Developer of the Original Code is Openbravo SLU
 * All portions are Copyright (C) 2012 Openbravo SLU
 * All Rights Reserved.
*************************************************************************
****
* Title: Validates the IBAN and returns the displayed account based on it
* Description:
*  In case the IBAN format is not correct, it raises an exception
************************************************************************/
  v_IBAN_check NUMBER;
  v_Bank NVARCHAR2(4);
  v_Branch NVARCHAR2(4);
  v_DigitBank NVARCHAR2(1);
  v_CountryId NVARCHAR2(2);
  v_Length NUMBER;
  
  v_CodeAccountLength NUMBER;
  v_I_AccountNumberOrig NVARCHAR2(60);
  v_I_AccountNumberFinal NVARCHAR2(600):='';
  v_i_char NVARCHAR2(2);
  v_i_char_ascii NUMBER;
  v_i NUMBER:=1;
BEGIN
  v_I_AccountNumberOrig:=SUBSTR(p_iban, 5, LENGTH(p_iban)-4);
  v_CodeAccountLength:=LENGTH(v_I_AccountNumberOrig);
  WHILE (v_i<=v_CodeAccountLength) LOOP 
   v_i_char:=SUBSTR(v_I_AccountNumberOrig, v_i, 1);
   v_i_char_ascii:=ASCII(v_i_char);
   --It is not a number, transforming to number
   IF ((v_i_char_ascii<48) OR (v_i_char_ascii>57)) THEN
     v_i_char:=TO_CHAR(v_i_char_ascii-55);
   END IF;
   v_I_AccountNumberFinal:=v_I_AccountNumberFinal||v_i_char;
   v_i:=v_i+1;
  END LOOP;


  SELECT MOD(TO_NUMBER(v_I_AccountNumberFinal||
                      TRIM(TO_CHAR(ASCII(SUBSTR(UPPER(p_iban),1,1))-55))
                      ||TRIM(TO_CHAR(ASCII(SUBSTR(UPPER(p_iban),2,1))-55))||
                      SUBSTR(p_iban,3,2)
                      , '999999999999999999999999999999999999999999999999999999999999'
                      )
             ,97) AS DC
  INTO v_IBAN_check
  FROM DUAL;
  IF (v_IBAN_check <> 1) THEN
    RAISE_APPLICATION_ERROR(-20000, '@20257@');
  END IF;
  SELECT IBANCOUNTRY, IBANNODIGITS
  INTO v_CountryId, v_Length
  FROM C_COUNTRY
  WHERE C_COUNTRY_ID=p_country_id;
  IF ((v_CountryId IS NULL OR v_Length IS NULL) OR (v_CountryId <> SUBSTR(UPPER(p_iban),1,2) OR v_Length <> LENGTH(p_iban))) THEN
    RAISE_APPLICATION_ERROR(-20000, '@20259@');
  END IF;
  
  return SUBSTR(p_iban,1,4) || '-' || SUBSTR(p_iban, 5, LENGTH(p_iban)-4);
END C_GET_IBAN_DISPLAYED_ACCOUNT
]]></body>
    </function>
  </database>
