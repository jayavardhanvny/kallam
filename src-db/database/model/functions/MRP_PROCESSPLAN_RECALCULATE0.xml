<?xml version="1.0"?>
  <database name="FUNCTION MRP_PROCESSPLAN_RECALCULATE0">
    <function name="MRP_PROCESSPLAN_RECALCULATE0" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2006 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32):='0';
  v_TimeHorizon NUMBER;
  v_PlanningDate DATE;
  v_SecurityMargin NUMBER;


  FINISH_PROCESS BOOLEAN DEFAULT FALSE;
  --  Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
  BEGIN
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT pi.Record_ID, pi.AD_User_ID, pp.ParameterName, pp.P_String, pp.P_Number, pp.P_Date
      FROM AD_PInstance pi
      LEFT JOIN AD_PInstance_Para pp
        ON pi.AD_PInstance_ID=pp.AD_PInstance_ID
      WHERE pi.AD_PInstance_ID=p_PInstance_ID
      ORDER BY pp.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_User_ID:=Cur_Parameter.AD_User_ID;
    END LOOP; -- Get Parameter

    SELECT TimeHorizon, SecurityMargin, datedoc
      INTO v_TimeHorizon, v_SecurityMargin, v_PlanningDate
    FROM MRP_RUN_PRODUCTION, MRP_RUN_PRODUCTIONLINE
    WHERE MRP_RUN_PRODUCTION.MRP_RUN_PRODUCTION_ID = MRP_RUN_PRODUCTIONLINE.MRP_RUN_PRODUCTION_ID
      AND MRP_RUN_PRODUCTIONLINE_ID=v_Record_ID;

    MRP_PROCESSPLAN_RECALCULATE(v_User_ID, v_Record_ID, v_TimeHorizon,
                                    v_PlanningDate, v_SecurityMargin);
    AD_UPDATE_PINSTANCE(p_PInstance_ID, v_User_id, 'N', v_Result, v_Message);
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('MRP_PROCESSPLAN_RECALCULATE0 exception: ' || v_ResultStr);
  ROLLBACK;
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr);
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END MRP_PROCESSPLAN_RECALCULATE0
]]></body>
    </function>
  </database>
