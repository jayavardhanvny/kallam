<?xml version="1.0"?>
  <database name="TRIGGER AD_REF_LIST_MOD_TRG">
    <trigger name="AD_REF_LIST_MOD_TRG" table="AD_REF_LIST" fires="before" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[

/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2008-2012 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  devTemplate NUMBER;
  devModule   CHAR(1);
  cuerrentModuleID  VARCHAR2(32);
  vAux NUMBER;
    
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;

  --Check if trying to move object from module not in dev
  IF (UPDATING) THEN
    IF (COALESCE(:NEW.AD_Module_ID , '.') != COALESCE(:OLD.AD_Module_ID , '.')) THEN
      SELECT COUNT(*) 
        INTO vAux
        FROM AD_MODULE
       WHERE AD_MODULE_ID = :old.AD_Module_ID
        AND isindevelopment = 'N';
      IF (vAux!=0) THEN
        RAISE_APPLICATION_ERROR(-20000, '@ChangeNotInDevModule@');
      END IF;
    END IF;
  END IF;

  SELECT COUNT(*)
    INTO devTemplate
    FROM AD_MODULE
   WHERE IsInDevelopment = 'Y'
     AND Type = 'T';
     
  IF (UPDATING OR INSERTING) THEN
    cuerrentModuleID := :new.AD_Module_ID;
  ELSE
    cuerrentModuleID := :old.AD_Module_ID;
  END IF;
  
  SELECT M.IsInDevelopment
    INTO devModule
    FROM AD_MODULE M
   WHERE M.AD_MODULE_ID = cuerrentModuleID;
     
  IF (UPDATING AND devTemplate=0 AND devModule='N') THEN
    IF (
        COALESCE(:NEW.AD_Client_ID , '.') != COALESCE(:OLD.AD_Client_ID , '.') OR
        COALESCE(:NEW.AD_Org_ID , '.') != COALESCE(:OLD.AD_Org_ID , '.') OR
        COALESCE(:NEW.IsActive , '.') != COALESCE(:OLD.IsActive , '.') OR
        COALESCE(:NEW.Value , '.') != COALESCE(:OLD.Value , '.') OR
        COALESCE(:NEW.Name , '.') != COALESCE(:OLD.Name , '.') OR
        COALESCE(:NEW.Description , '.') != COALESCE(:OLD.Description , '.') OR
        COALESCE(:NEW.AD_Reference_ID , '.') != COALESCE(:OLD.AD_Reference_ID , '.') OR
        COALESCE(:NEW.ValidFrom , TO_DATE('01-01-1900', 'DD-MM-YYYY')) != COALESCE(:OLD.ValidFrom , TO_DATE('01-01-1900', 'DD-MM-YYYY')) OR
        COALESCE(:NEW.ValidTo , TO_DATE('01-01-1900', 'DD-MM-YYYY')) != COALESCE(:OLD.ValidTo , TO_DATE('01-01-1900', 'DD-MM-YYYY')) OR
        COALESCE(:NEW.SeqNo, -1) != COALESCE(:OLD.SeqNo, -1)) THEN
      RAISE_APPLICATION_ERROR(-20000, '@20532@');
    END IF;
  END IF;
  
  IF ((DELETING OR INSERTING) AND devModule='N') THEN
    RAISE_APPLICATION_ERROR(-20000, '@20533@');
  END IF;
END AD_REF_LIST_MOD_TRG
]]></body>
    </trigger>
  </database>
