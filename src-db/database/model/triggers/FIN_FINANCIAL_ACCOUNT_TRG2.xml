<?xml version="1.0"?>
  <database name="TRIGGER FIN_FINANCIAL_ACCOUNT_TRG2">
    <trigger name="FIN_FINANCIAL_ACCOUNT_TRG2" table="FIN_FINANCIAL_ACCOUNT" fires="before" insert="true" update="true" delete="false" foreach="row">
      <body><![CDATA[
    /*************************************************************************
    * The contents of this file are subject to the Openbravo  Public  License
    * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
    * Version 1.1  with a permitted attribution clause; you may not  use this
    * file except in compliance with the License. You  may  obtain  a copy of
    * the License at http://www.openbravo.com/legal/license.html
    * Software distributed under the License  is  distributed  on  an "AS IS"
    * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
    * License for the specific  language  governing  rights  and  limitations
    * under the License.
    * The Original Code is Openbravo ERP.
    * The Initial Developer of the Original Code is Openbravo SLU
    * All portions are Copyright (C) 2010-2012 Openbravo SLU
    * All Rights Reserved.
    * Contributor(s):  ______________________________________.
    ************************************************************************/
 v_IBAN FIN_FINANCIAL_ACCOUNT.ACCOUNTNO%TYPE;
BEGIN

    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;

  IF(INSERTING) THEN
    :NEW.currentbalance := :NEW.initialbalance;
    
  END IF;
  
	IF(INSERTING) THEN
		IF (:NEW.TYPE='B') THEN
      IF (:NEW.IBAN IS NOT NULL) THEN
        IF (:NEW.C_COUNTRY_ID IS NULL) THEN
	  			RAISE_APPLICATION_ERROR(-20000, '@COUNTRY_IBAN@') ;
        ELSE
          :NEW.IBAN := REPLACE(:NEW.IBAN, ' ', '');
          v_IBAN := C_GET_IBAN_DISPLAYED_ACCOUNT(:NEW.IBAN, :NEW.C_COUNTRY_ID);
        END IF;
      END IF;
    END IF;
  ELSIF (UPDATING) THEN
  	IF (:NEW.TYPE='B') THEN
      IF (:NEW.IBAN IS NOT NULL 
      AND (COALESCE(:OLD.IBAN,'XX') <> COALESCE(:NEW.IBAN,'XX') OR COALESCE(:OLD.C_COUNTRY_ID,'XX') <> COALESCE(:NEW.C_COUNTRY_ID,'XX'))) THEN
      	IF (:NEW.C_COUNTRY_ID IS NULL) THEN
	  			RAISE_APPLICATION_ERROR(-20000, '@COUNTRY_IBAN@') ;
        ELSE
      		:NEW.IBAN := REPLACE(:NEW.IBAN, ' ', '');
       		v_IBAN := C_GET_IBAN_DISPLAYED_ACCOUNT(:NEW.IBAN, :NEW.C_COUNTRY_ID);
        END IF;
      END IF;
    END IF;
  END IF;
  
  IF(INSERTING OR UPDATING) THEN
    IF (:NEW.TYPE='B') THEN
      IF (:NEW.BANKFORMAT='IBAN') THEN
        :NEW.ACCOUNTNO:=v_IBAN;
      ELSIF (:NEW.BANKFORMAT='SWIFT') THEN
        :NEW.ACCOUNTNO:=:NEW.SWIFTCODE || :NEW.GENERICACCOUNTNO;
      ELSIF (:NEW.BANKFORMAT='SPANISH') THEN
        :NEW.ACCOUNTNO:= :NEW.CODEBANK || :NEW.CODEBRANCH || :NEW.BANK_DIGITCONTROL || :NEW.ACCOUNT_DIGITCONTROL || :NEW.CODEACCOUNT;
      ELSIF (:NEW.BANKFORMAT='GENERIC') THEN
        :NEW.ACCOUNTNO:=:NEW.GENERICACCOUNTNO;
      END IF;
    END IF;
  END IF;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RAISE_APPLICATION_ERROR(-20000, '@20257@') ;
  -- Hack for displaying beautiful message in case of exception from C_GET_IBAN_DISPLAYED_ACCOUNT
  WHEN OTHERS THEN 
    RAISE;

END FIN_FINANCIAL_ACCOUNT_TRG2
]]></body>
    </trigger>
  </database>
