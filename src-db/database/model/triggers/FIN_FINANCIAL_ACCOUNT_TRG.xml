<?xml version="1.0"?>
  <database name="TRIGGER FIN_FINANCIAL_ACCOUNT_TRG">
    <trigger name="FIN_FINANCIAL_ACCOUNT_TRG" table="FIN_FINANCIAL_ACCOUNT" fires="after" insert="true" update="true" delete="false" foreach="row">
      <body><![CDATA[
    /*************************************************************************
    * The contents of this file are subject to the Openbravo  Public  License
    * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
    * Version 1.1  with a permitted attribution clause; you may not  use this
    * file except in compliance with the License. You  may  obtain  a copy of
    * the License at http://www.openbravo.com/legal/license.html
    * Software distributed under the License  is  distributed  on  an "AS IS"
    * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
    * License for the specific  language  governing  rights  and  limitations
    * under the License.
    * The Original Code is Openbravo ERP.
    * The Initial Developer of the Original Code is Openbravo SLU
    * All portions are Copyright (C) 2010-2012 Openbravo SLU
    * All Rights Reserved.
    * Contributor(s):  ______________________________________.
    ************************************************************************/
    TYPE RECORD IS REF CURSOR;
  Cur_Defaults RECORD;
  v_AssetAccount character varying(32);

BEGIN

    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;


  IF(INSERTING) THEN
    FOR Cur_Defaults IN
      (
      SELECT *
      FROM C_AcctSchema_Default d
      WHERE EXISTS
        (
      SELECT 1
      FROM AD_Org_AcctSchema
      WHERE (AD_IsOrgIncluded(AD_Org_ID, :new.AD_ORG_ID, :new.AD_Client_ID)<>-1
          or AD_IsOrgIncluded(:new.AD_ORG_ID, AD_Org_ID, :new.AD_Client_ID)<>-1)
      AND IsActive = 'Y'
      AND AD_Org_AcctSchema.C_AcctSchema_ID = d.C_AcctSchema_ID
        )
      AND D.AD_CLIENT_ID = :new.AD_Client_ID
      )
    LOOP
      IF(:new.type = 'C') THEN
        v_AssetAccount := Cur_Defaults.CB_Asset_Acct;
      ELSE
        v_AssetAccount := Cur_Defaults.B_Asset_Acct;
      END IF;
      INSERT INTO fin_financial_account_acct(
            fin_financial_account_acct_id, fin_financial_account_id, c_acctschema_id, 
            ad_client_id, ad_org_id, isactive, created, createdby, updated, 
            updatedby, fin_deposit_acct, 
            fin_withdrawal_acct, fin_debit_acct, fin_credit_acct, fin_bankfee_acct, 
            fin_bankrevaluationgain_acct, fin_bankrevaluationloss_acct, fin_out_intransit_acct,
            fin_out_clear_acct, fin_in_intransit_acct, fin_in_clear_acct)
      VALUES (get_uuid(), :new.fin_financial_account_id, Cur_Defaults.C_AcctSchema_ID, 
            :new.AD_Client_ID, :new.AD_ORG_ID, 'Y', now(), :new.CreatedBy, now(), 
            :new.UpdatedBy, v_AssetAccount, 
            v_AssetAccount, null, null, Cur_Defaults.B_Expense_Acct, 
            Cur_Defaults.B_RevaluationGain_Acct, Cur_Defaults.B_RevaluationLoss_Acct, Cur_Defaults.B_InTransit_Acct,
            v_AssetAccount, Cur_Defaults.B_InTransit_Acct, v_AssetAccount);

    END LOOP;
  ELSIF (UPDATING) THEN
    UPDATE fin_financial_account_acct SET AD_ORG_ID = :new.AD_ORG_ID
    WHERE fin_financial_account_id = :new.fin_financial_account_id;
  END IF;
END FIN_FINANCIAL_ACCOUNT_TRG
]]></body>
    </trigger>
  </database>
