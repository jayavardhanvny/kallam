<?xml version="1.0"?>
  <database name="TRIGGER USER2_TRG">
    <trigger name="USER2_TRG" table="USER2" fires="after" insert="true" update="false" delete="true" foreach="row">
      <body><![CDATA[
/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2012 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
    v_Tree_ID VARCHAR2(32);
    v_count NUMBER;
    
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;


  IF (INSERTING) THEN    

    --  Create TreeNode --
    SELECT c.AD_Tree_User2_ID
    INTO v_Tree_ID
    FROM AD_ClientInfo c
    WHERE c.AD_Client_ID=:new.AD_Client_ID;

    --  Insert into TreeNode
    INSERT
    INTO AD_TreeNode
      (
        AD_TreeNode_ID, AD_Client_ID, AD_Org_ID, IsActive,
        Created, CreatedBy, Updated,
        UpdatedBy, AD_Tree_ID, Node_ID,
        Parent_ID, SeqNo
      )
      VALUES
      (
        get_uuid(), :new.AD_Client_ID, :new.AD_Org_ID, :new.IsActive,
        :new.Created, :new.CreatedBy, :new.Updated,
        :new.UpdatedBy, v_Tree_ID, :new.User2_ID,
        '0',(
        CASE :new.IsSummary
          WHEN 'Y'
          THEN 100
          ELSE 999
        END
        )
      );
   
  ELSIF (DELETING) THEN
    --  Delete TreeNode --
    --  get AD_Tree_ID
    SELECT c.AD_Tree_User2_ID
    INTO v_Tree_ID
    FROM AD_ClientInfo c
    WHERE c.AD_Client_ID=:old.AD_Client_ID;
    
    SELECT COUNT(*) 
    INTO v_count 
    FROM AD_TREENODE 
    WHERE parent_id=:old.User2_ID
    AND AD_TREE_ID=v_Tree_ID;

    IF(v_count>0) THEN
      RAISE_APPLICATION_ERROR(-20000, '@DimensionHasChildren@');
    END IF;

    DELETE
    FROM AD_TREENODE
    WHERE AD_CLIENT_ID=:old.AD_Client_ID
    AND AD_Tree_ID=v_Tree_ID
    AND Node_ID=:old.User2_ID;
  END IF;
END USER2_TRG
]]></body>
    </trigger>
  </database>
