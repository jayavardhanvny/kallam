<?xml version="1.0"?>
  <database name="TRIGGER C_BSTMT_CHK_RESTRICTIONS_TRG">
    <trigger name="C_BSTMT_CHK_RESTRICTIONS_TRG" table="C_BANKSTATEMENT" fires="before" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[





/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2012 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
v_Count NUMBER;
v_DateNull DATE := TO_DATE('01-01-1900', 'DD-MM-YYYY');
        
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;

    IF UPDATING THEN

        IF ((:OLD.PROCESSED = 'Y' AND :OLD.PROCESSING = 'N' AND :NEW.PROCESSED = 'N' AND :NEW.PROCESSING='N') OR
            (:OLD.PROCESSED = 'N' AND :OLD.PROCESSING = 'N' AND :NEW.PROCESSED = 'Y' AND :NEW.PROCESSING='N')) THEN
            -- Checking for concurrent process running
            RAISE_APPLICATION_ERROR(-20000, '@OtherProcessActive@') ;
        END IF;

     IF (:old.Processed='Y'
        AND ((COALESCE(:old.STATEMENTDATE, v_DateNull) <> COALESCE(:new.STATEMENTDATE, v_DateNull))
        OR(COALESCE(:old.C_BANKACCOUNT_ID, '0') <> COALESCE(:new.C_BANKACCOUNT_ID, '0'))
        OR(COALESCE(:old.AD_ORG_ID, '0') <> COALESCE(:new.AD_ORG_ID, '0'))
        OR(COALESCE(:old.AD_CLIENT_ID, '0') <> COALESCE(:new.AD_CLIENT_ID, '0'))))
      THEN
      RAISE_APPLICATION_ERROR(-20000, '@20501@');
     END IF;
     begin
      SELECT COUNT(*)
        INTO v_Count
        FROM C_BankAccount b1,
            C_BankAccount b2
       WHERE b1.C_BankAccount_ID = :old.C_BankAccount_ID
         AND b2.C_BankAccount_ID = :new.C_BankAccount_ID
        AND b2.C_Currency_ID != b1.C_Currency_ID
        AND EXISTS (SELECT 1
               FROM C_BankStatementLine
              WHERE C_BankStatement_ID = :new.C_BankStatement_ID);
      exception when others then
       v_Count:=0;
      end;
       IF v_Count > 0 THEN
         RAISE_APPLICATION_ERROR(-20000, '@20503@');
       END IF;

   END IF;
   IF(DELETING) THEN
     IF(:old.Processed='Y') THEN
       RAISE_APPLICATION_ERROR(-20000, '@20501@') ;
     END IF;
   END IF;
   IF(INSERTING) THEN
     IF(:NEW.Processed='Y') THEN
       RAISE_APPLICATION_ERROR(-20000, '@20501@') ;
     END IF;
   END IF;
END C_BSTMT_CHK_RESTRICTIONS_TRG
]]></body>
    </trigger>
  </database>
