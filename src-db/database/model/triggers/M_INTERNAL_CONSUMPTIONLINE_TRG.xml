<?xml version="1.0"?>
  <database name="TRIGGER M_INTERNAL_CONSUMPTIONLINE_TRG">
    <trigger name="M_INTERNAL_CONSUMPTIONLINE_TRG" table="M_INTERNAL_CONSUMPTIONLINE" fires="after" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[




  v_ID VARCHAR2(32);
  v_RO            NUMBER;
  V_STOCKED       NUMBER;
  v_MOVEMENTQTY   NUMBER;
  v_QUANTITYORDER NUMBER;
  v_AttrSetValueType M_Product.AttrSetValueType%TYPE;
/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2012 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
    
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;


  IF INSERTING OR UPDATING THEN
    v_ID:=:new.M_Internal_Consumption_ID;
  ELSIF DELETING THEN
    v_ID:=:old.M_Internal_Consumption_ID;
  END IF;
  --  ReadOnly Check
  SELECT COUNT(*)
  INTO v_RO
  FROM M_Internal_Consumption
  WHERE M_Internal_Consumption_ID=v_ID
    AND(Processed='Y'
    OR Posted='Y') ;
  IF(v_RO > 0) THEN
    RAISE_APPLICATION_ERROR(-20000, '@20501@') ;
  END IF;
  -- Updating inventory
  IF UPDATING OR DELETING THEN
    SELECT COUNT(*)
    INTO V_STOCKED
    FROM M_PRODUCT
    WHERE M_Product_ID=:OLD.M_PRODUCT_ID
      AND IsStocked='Y'
      AND ProductType='I';
    IF V_STOCKED > 0 THEN
      v_MOVEMENTQTY:=:OLD.MOVEMENTQTY;
      v_QUANTITYORDER:=:OLD.QUANTITYORDER;
      M_UPDATE_INVENTORY(:OLD.AD_CLIENT_ID, :OLD.AD_ORG_ID, :OLD.UPDATEDBY, :OLD.M_PRODUCT_ID, :OLD.M_LOCATOR_ID, :OLD.M_ATTRIBUTESETINSTANCE_ID, :OLD.C_UOM_ID, :OLD.M_PRODUCT_UOM_ID, NULL, NULL, NULL, v_MOVEMENTQTY, v_QUANTITYORDER) ;
    END IF;
  END IF;
  IF INSERTING OR UPDATING THEN
    SELECT COUNT(*)
    INTO V_STOCKED
    FROM M_PRODUCT
    WHERE M_Product_ID=:NEW.M_PRODUCT_ID
      AND IsStocked='Y'
      AND ProductType='I';
    IF V_STOCKED > 0 THEN
      v_MOVEMENTQTY:=:NEW.MOVEMENTQTY;
      v_QUANTITYORDER:=:NEW.QUANTITYORDER;
      M_UPDATE_INVENTORY(:NEW.AD_CLIENT_ID, :NEW.AD_ORG_ID, :NEW.UPDATEDBY, :NEW.M_PRODUCT_ID, :NEW.M_LOCATOR_ID, :NEW.M_ATTRIBUTESETINSTANCE_ID, :NEW.C_UOM_ID, :NEW.M_PRODUCT_UOM_ID, NULL, NULL, NULL, -v_MOVEMENTQTY, -v_QUANTITYORDER) ;
    END IF;
  END IF;
  IF (INSERTING OR UPDATING) THEN
   --Does not allow to change the attribute set value
   -- for products which attribute set value type is Fixed
   IF (:NEW.M_PRODUCT_ID IS NOT NULL AND COALESCE(:new.M_AttributeSetInstance_ID,'0')!='0') THEN
    SELECT ATTRSETVALUETYPE 
    INTO v_AttrSetValueType
    FROM M_PRODUCT 
    WHERE M_PRODUCT_ID=:NEW.M_PRODUCT_ID;
    IF (v_AttrSetValueType='F') THEN
     RAISE_APPLICATION_ERROR(-20000, '@AttrSetValueFixed@');
    END IF;
   END IF;
  END IF;

END M_INTERNAL_CONSUMPTIONLINE_TRG
]]></body>
    </trigger>
  </database>
