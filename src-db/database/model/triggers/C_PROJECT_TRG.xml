<?xml version="1.0"?>
  <database name="TRIGGER C_PROJECT_TRG">
    <trigger name="C_PROJECT_TRG" table="C_PROJECT" fires="after" insert="true" update="true" delete="false" foreach="row">
      <body><![CDATA[
    /*************************************************************************
    * The contents of this file are subject to the Compiere Public
    * License 1.1 ("License"); You may not use this file except in
    * compliance with the License. You may obtain a copy of the License in
    * the legal folder of your Openbravo installation.
    * Software distributed under the License is distributed on an
    * "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
    * implied. See the License for the specific language governing rights
    * and limitations under the License.
    * The Original Code is  Compiere  ERP &  Business Solution
    * The Initial Developer of the Original Code is Jorg Janke and ComPiere, Inc.
    * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke,
    * parts created by ComPiere are Copyright (C) ComPiere, Inc.;
    * All Rights Reserved.
    * Contributor(s): Openbravo SLU
    * Contributions are Copyright (C) 2001-2012 Openbravo, S.L.U.
    *
    * Specifically, this derivative work is based upon the following Compiere
    * file and version.
    *************************************************************************
    * $Id: C_Project_Trg.sql,v 1.3 2002/10/23 03:16:57 jjanke Exp $
    ***
    * Title: Project new record
    * Description:
    *  - create default accounts
    *  - create treenode
    ************************************************************************/
    v_Tree_ID VARCHAR2(32);
  v_Parent_ID VARCHAR2(32);
    v_Count NUMBER;
  --
  TYPE RECORD IS REF CURSOR;
    Cur_Defaults RECORD;
    
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;


  IF (INSERTING) THEN
    FOR Cur_Defaults IN
      (
      SELECT *
      FROM C_AcctSchema_Default d
      WHERE EXISTS
        (
      SELECT 1 
      FROM AD_Org_AcctSchema
      WHERE AD_IsOrgIncluded(AD_Org_ID, :new.AD_ORG_ID, :new.AD_Client_ID)<>-1
      AND IsActive = 'Y'
      AND AD_Org_AcctSchema.C_AcctSchema_ID = d.C_AcctSchema_ID
        )
      )
    LOOP
      --  Account
      INSERT
      INTO C_Project_Acct
        (
          C_Project_Acct_Id, C_Project_ID, C_AcctSchema_ID, AD_Client_ID,
          AD_Org_ID, IsActive, Created,
          CreatedBy, Updated, UpdatedBy,
          PJ_Asset_Acct, PJ_WIP_Acct
        )
        VALUES
        (
          get_uuid(), :new.C_Project_ID, Cur_Defaults.C_AcctSchema_ID, :new.AD_Client_ID,
          :new.AD_ORG_ID,  'Y', now(),
          :new.CreatedBy, now(), :new.UpdatedBy,
          Cur_Defaults.PJ_Asset_Acct, Cur_Defaults.PJ_WIP_Acct
        )
        ;
    END LOOP;
    --  Create TreeNode --
    --  get AD_Tree_ID + ParentID
    SELECT c.AD_Tree_Project_ID,
      n.Node_ID
    INTO v_Tree_ID,
      v_Parent_ID
    FROM AD_ClientInfo c,
      AD_TreeNode n
    WHERE c.AD_Tree_Project_ID=n.AD_Tree_ID
      AND n.Parent_ID IS NULL
      AND c.AD_Client_ID=:new.AD_Client_ID;
    --  DBMS_OUTPUT.PUT_LINE('Tree='||xTree_ID||'  Node='||:new.C_Project_ID||'  Parent='||xParent_ID);
    --  Insert into TreeNode
    INSERT
    INTO AD_TreeNode
      (
        AD_TreeNode_ID, AD_Client_ID, AD_Org_ID, IsActive,
        Created, CreatedBy, Updated,
        UpdatedBy, AD_Tree_ID, Node_ID,
        Parent_ID, SeqNo
      )
      VALUES
      (
        get_uuid(), :new.AD_Client_ID, :new.AD_Org_ID, :new.IsActive,
        :new.Created, :new.CreatedBy, :new.Updated,
        :new.UpdatedBy, v_Tree_ID, :new.C_Project_ID,
        v_Parent_ID,(
        CASE :new.IsSummary
          WHEN 'Y'
          THEN 100
          ELSE 999
        END
        )
      )
      ;
    ELSIF (UPDATING) THEN
     IF (:new.AD_ORG_ID <> :old.AD_ORG_ID) THEN
       SELECT COUNT(*) INTO v_Count FROM C_PROJECTPHASE WHERE C_PROJECT_ID = :new.C_PROJECT_ID;
       IF(v_Count > 0) THEN
        UPDATE C_PROJECTPHASE
        SET AD_ORG_ID = :new.AD_ORG_ID
        WHERE C_PROJECT_ID = :new.C_PROJECT_ID;
       END IF;
     
       UPDATE C_PROJECT_ACCT SET AD_ORG_ID = :new.AD_ORG_ID
       WHERE C_PROJECT_ID = :new.C_PROJECT_ID;
      END IF;
    END IF;
    -- Summary Nodes first
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RAISE_APPLICATION_ERROR(-20000, '@20001@') ;
END C_PROJECT_TRG
]]></body>
    </trigger>
  </database>
