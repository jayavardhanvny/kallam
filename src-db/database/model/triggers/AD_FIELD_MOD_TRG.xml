<?xml version="1.0"?>
  <database name="TRIGGER AD_FIELD_MOD_TRG">
    <trigger name="AD_FIELD_MOD_TRG" table="AD_FIELD" fires="before" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[

/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2008-2012 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  devTemplate NUMBER;
  devModule   CHAR(1);
  cuerrentID  VARCHAR2(32);
  cuerrentModuleID  VARCHAR2(32);
  vAux NUMBER;
    
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;

  --Check if trying to move object from module not in dev
  IF (UPDATING) THEN
    IF (COALESCE(:NEW.AD_Module_ID , '.') != COALESCE(:OLD.AD_Module_ID , '.')) THEN
      SELECT COUNT(*) 
        INTO vAux
        FROM AD_MODULE
       WHERE AD_MODULE_ID = :old.AD_Module_ID
        AND isindevelopment = 'N';
      IF (vAux!=0) THEN
        RAISE_APPLICATION_ERROR(-20000, '@ChangeNotInDevModule@');
      END IF;
    END IF;
  END IF;

  SELECT COUNT(*)
    INTO devTemplate
    FROM AD_MODULE
   WHERE IsInDevelopment = 'Y'
     AND Type = 'T';
     
  IF (UPDATING OR INSERTING) THEN
    cuerrentID := :new.AD_Field_ID;
    cuerrentModuleID := :new.AD_Module_ID;
  ELSE
    cuerrentID := :old.AD_Field_ID;
    cuerrentModuleID := :old.AD_Module_ID;
  END IF;
  
  SELECT M.IsInDevelopment
    INTO devModule
    FROM AD_MODULE M
   WHERE M.AD_MODULE_ID = cuerrentModuleID;
     
  IF (UPDATING AND devTemplate=0 AND devModule='N') THEN
    IF (
        COALESCE(:NEW.AD_Client_ID , '.') != COALESCE(:OLD.AD_Client_ID , '.') OR
        COALESCE(:NEW.AD_Org_ID , '.') != COALESCE(:OLD.AD_Org_ID , '.') OR
        COALESCE(:NEW.IsActive , '.') != COALESCE(:OLD.IsActive , '.') OR
        COALESCE(:NEW.IsCentrallyMaintained , '.') != COALESCE(:OLD.IsCentrallyMaintained , '.') OR
        COALESCE(:NEW.AD_Tab_ID , '.') != COALESCE(:OLD.AD_Tab_ID , '.') OR
        COALESCE(:NEW.AD_Column_ID , '.') != COALESCE(:OLD.AD_Column_ID , '.') OR
        COALESCE(:NEW.PROPERTY , '.') != COALESCE(:OLD.PROPERTY , '.') OR
        COALESCE(:NEW.AD_FieldGroup_ID , '.') != COALESCE(:OLD.AD_FieldGroup_ID , '.') OR
        COALESCE(:NEW.IsDisplayed , '.') != COALESCE(:OLD.IsDisplayed , '.') OR
        COALESCE(:NEW.DisplayLogic , '.') != COALESCE(:OLD.DisplayLogic , '.') OR
        COALESCE(:NEW.DisplayLength , 0) != COALESCE(:OLD.DisplayLength , 0) OR
        COALESCE(:NEW.IsReadOnly , '.') != COALESCE(:OLD.IsReadOnly , '.') OR
        COALESCE(:NEW.SeqNo , 0) != COALESCE(:OLD.SeqNo , 0) OR
        COALESCE(:NEW.SortNo , 0) != COALESCE(:OLD.SortNo , 0) OR
        COALESCE(:NEW.IsSameLine , '.') != COALESCE(:OLD.IsSameLine , '.') OR
        COALESCE(:NEW.IsFieldOnly , '.') != COALESCE(:OLD.IsFieldOnly , '.') OR
        COALESCE(:NEW.IsEncrypted , '.') != COALESCE(:OLD.IsEncrypted , '.') OR
        COALESCE(:NEW.ShowInRelation , '.') != COALESCE(:OLD.ShowInRelation , '.') OR
        COALESCE(:NEW.OnChangeFunction , '.') != COALESCE(:OLD.OnChangeFunction , '.') OR
        COALESCE(:NEW.ClientClass , '.') != COALESCE(:OLD.ClientClass , '.') OR
        COALESCE(:NEW.Isfirstfocusedfield , '.') != COALESCE(:OLD.Isfirstfocusedfield , '.') OR
        COALESCE(:NEW.AD_Module_ID , '.') != COALESCE(:OLD.AD_Module_ID , '.') OR
        COALESCE(:NEW.IgnoreInWad , '.') != COALESCE(:OLD.IgnoreInWad , '.') OR
        COALESCE(:NEW.Grid_Seqno , 1) != COALESCE(:OLD.Grid_Seqno , 1) OR
        COALESCE(:NEW.StartInOddColumn , '.') != COALESCE(:OLD.StartInOddColumn , '.') OR
        COALESCE(:NEW.StartNewLine , '.') != COALESCE(:OLD.StartNewLine , '.') OR
        COALESCE(:NEW.IsShownInStatusBar , '.') != COALESCE(:OLD.IsShownInStatusBar , '.') OR
        1=2) THEN
      RAISE_APPLICATION_ERROR(-20000, '@20532@');
    END IF;
    
    IF (:NEW.IsCentrallyMaintained = 'N' 
         AND (COALESCE(:NEW.Name , '.') != COALESCE(:OLD.Name , '.') OR
              COALESCE(:NEW.Description , '.') != COALESCE(:OLD.Description , '.') OR
              COALESCE(:NEW.Help , '.') != COALESCE(:OLD.Help , '.'))) THEN
      RAISE_APPLICATION_ERROR(-20000, '@20532@');
    END IF;
  END IF;
  
  IF ((DELETING OR INSERTING) AND devModule='N') THEN
    RAISE_APPLICATION_ERROR(-20000, '@20533@');
  END IF;
END AD_FIELD_MOD_TRG
]]></body>
    </trigger>
  </database>
