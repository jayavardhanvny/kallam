<?xml version="1.0"?>
  <database name="VIEW C_RM_ORDER_PICK_EDIT_LINES">
    <view name="C_RM_ORDER_PICK_EDIT_LINES"><![CDATA[SELECT COALESCE(il.m_inoutline_id, rol.c_orderline_id) AS c_rm_order_pick_edit_lines_id, COALESCE(rol.ad_client_id, il.ad_client_id) AS ad_client_id, COALESCE(rol.ad_org_id, il.ad_org_id) AS ad_org_id, COALESCE(rol.isactive, il.isactive) AS isactive, COALESCE(rol.createdby, il.createdby) AS createdby, COALESCE(rol.updatedby, il.updatedby) AS updatedby, COALESCE(rol.created, il.created) AS created, COALESCE(rol.updated, il.updated) AS updated, CASE WHEN rol.c_orderline_id IS NOT NULL THEN 'Y' ELSE 'N' END AS ob_selected, il.m_inoutline_id, rol.c_order_id AS returnorderid, i.documentno AS inoutno, i.movementdate, COALESCE(rol.m_product_id, il.m_product_id) AS m_product_id, COALESCE(rol.m_attributesetinstance_id, il.m_attributesetinstance_id) AS m_attributesetinstance_id, il.movementqty, COALESCE(rol.c_uom_id, il.c_uom_id) AS c_uom_id, (-1) * rol.qtyordered AS returned, CASE WHEN rol.c_orderline_id IS NOT NULL THEN CASE rol.istaxincluded WHEN 'N' THEN rol.priceactual ELSE rol.gross_unit_price END ELSE CASE pl.istaxincluded WHEN 'N' THEN ol.priceactual ELSE ol.gross_unit_price END END AS priceactual, rol.c_return_reason_id, o.documentno AS orderno, COALESCE(rol.issotrx, i.issotrx) AS issotrx, (-1) * retol.returnedqty AS returnedqty, COALESCE(rol.c_bpartner_id, i.c_bpartner_id) AS c_bpartner_id, COALESCE(rol.c_tax_id, ol.c_tax_id) AS c_tax_id, pl.istaxincluded, rol.c_orderline_id FROM m_inoutline il JOIN m_inout i ON il.m_inout_id = i.m_inout_id AND i.processed = 'Y' AND i.docstatus <> 'VO' JOIN c_doctype dt ON i.c_doctype_id = dt.c_doctype_id AND dt.isreturn = 'N' LEFT JOIN c_orderline ol ON il.c_orderline_id = ol.c_orderline_id LEFT JOIN c_order o ON ol.c_order_id = o.c_order_id LEFT JOIN m_pricelist pl ON o.m_pricelist_id = pl.m_pricelist_id FULL JOIN (SELECT ol2.c_orderline_id, ol2.ad_org_id, ol2.isactive, ol2.created, ol2.createdby, ol2.updated, ol2.updatedby, ol2.c_order_id, ol2.qtyordered, ol2.priceactual, ol2.c_return_reason_id, ol2.m_inoutline_id, o2.c_bpartner_id, o2.issotrx, o2.ad_client_id, ol2.m_product_id, ol2.m_attributesetinstance_id, ol2.c_uom_id, ol2.c_tax_id, pl2.istaxincluded, ol2.gross_unit_price FROM c_orderline ol2 JOIN c_order o2 ON ol2.c_order_id = o2.c_order_id AND o2.processed = 'N' JOIN m_pricelist pl2 ON pl2.m_pricelist_id = o2.m_pricelist_id) rol ON rol.m_inoutline_id = il.m_inoutline_id LEFT JOIN (SELECT sum(ol3.qtyordered) AS returnedqty, ol3.m_inoutline_id FROM c_orderline ol3 JOIN c_order o3 ON ol3.c_order_id = o3.c_order_id AND o3.processed = 'Y' AND o3.docstatus <> 'VO' WHERE ol3.m_inoutline_id IS NOT NULL GROUP BY ol3.m_inoutline_id) retol ON retol.m_inoutline_id = il.m_inoutline_id LEFT JOIN c_order ro ON ro.c_order_id = rol.c_order_id WHERE (COALESCE(retol.returnedqty, 0) + COALESCE(il.movementqty, rol.qtyordered)) <> 0 AND ol.c_order_discount_id IS NULL]]></view>
  </database>
