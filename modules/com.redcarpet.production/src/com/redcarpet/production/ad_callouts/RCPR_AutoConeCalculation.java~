package com.redcarpet.production.ad_callouts;

import java.math.BigDecimal;
import java.text.DecimalFormat;
import javax.servlet.ServletException;
import org.apache.commons.lang.StringUtils;
import org.openbravo.erpCommon.ad_callouts.SimpleCallout;

public class RCPR_AutoConeCalculation extends SimpleCallout {

    @Override
    protected void execute(CalloutInfo info) throws ServletException {
        String strShfitTimeMins = info.getStringParameter("inpshifttimeinmins", null);
        String strMachineWorkingHrs = info.getStringParameter("inpmachineworkinghours", null);
        BigDecimal value = calculateMachineStoppageTime(strShfitTimeMins, strMachineWorkingHrs);
        DecimalFormat fr = new DecimalFormat("##.##");
        info.addResult("inpmachinestoppagemins", fr.format(value));
        
    }

    public BigDecimal calculateMachineStoppageTime(String strShiftTimeMins, String strMachineWorkingHrs) {

        strShiftTimeMins = getPlainStrNumber(strShiftTimeMins);
        strMachineWorkingHrs = getPlainStrNumber(strMachineWorkingHrs);
        BigDecimal retVal = BigDecimal.ZERO;
        try{
            double shiftTme = new BigDecimal(strShiftTimeMins).doubleValue();
            double machWorkHrs = new BigDecimal(strMachineWorkingHrs).doubleValue();
            double machWorkMins = machWorkHrs/60;
            retVal = new BigDecimal((shiftTme-machWorkMins));///60
        }catch(Exception ex){
            ex.printStackTrace();
        }
        return retVal;
    }

    public String getPlainStrNumber(String value) {
        return  StringUtils.equalsIgnoreCase(value, "") ? "0" : value.replace(",", "");
    }
}
