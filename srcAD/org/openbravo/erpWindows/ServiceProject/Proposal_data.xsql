<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="ProposalData" package="org.openbravo.erpWindows.ServiceProject">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_ProjectProposal.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_ProjectProposal.CreatedBy) as CreatedByR, 
        to_char(C_ProjectProposal.Updated, ?) as updated, 
        to_char(C_ProjectProposal.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_ProjectProposal.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_ProjectProposal.UpdatedBy) as UpdatedByR,
        C_ProjectProposal.C_BPartner_ID, 
(CASE WHEN C_ProjectProposal.C_BPartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS C_BPartner_IDR, 
C_ProjectProposal.C_BPartner_Location_ID, 
(CASE WHEN C_ProjectProposal.C_BPartner_Location_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS C_BPartner_Location_IDR, 
C_ProjectProposal.Datesend, 
C_ProjectProposal.AD_User_ID, 
(CASE WHEN C_ProjectProposal.AD_User_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS AD_User_IDR, 
COALESCE(C_ProjectProposal.IsSOTrx, 'N') AS IsSOTrx, 
C_ProjectProposal.FIN_Paymentmethod_ID, 
(CASE WHEN C_ProjectProposal.FIN_Paymentmethod_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS FIN_Paymentmethod_IDR, 
C_ProjectProposal.C_PaymentTerm_ID, 
(CASE WHEN C_ProjectProposal.C_PaymentTerm_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'') ) END) AS C_PaymentTerm_IDR, 
C_ProjectProposal.HeaderNote, 
C_ProjectProposal.FootNote, 
C_ProjectProposal.CopyFrom, 
C_ProjectProposal.Projectwon, 
C_ProjectProposal.PaymentRule, 
C_ProjectProposal.C_Project_ID, 
C_ProjectProposal.C_Projectproposal_ID, 
C_ProjectProposal.AD_Client_ID, 
COALESCE(C_ProjectProposal.IsActive, 'N') AS IsActive, 
C_ProjectProposal.AD_Org_ID, 
 
        ? AS LANGUAGE 
        FROM C_ProjectProposal left join (select C_BPartner_ID, Name from C_BPartner) table1 on (C_ProjectProposal.C_BPartner_ID = table1.C_BPartner_ID) left join (select C_BPartner_Location_ID, Name from C_BPartner_Location) table2 on (C_ProjectProposal.C_BPartner_Location_ID = table2.C_BPartner_Location_ID) left join (select AD_User_ID, Name from AD_User) table3 on (C_ProjectProposal.AD_User_ID = table3.AD_User_ID) left join (select FIN_Paymentmethod_ID, Name from FIN_Paymentmethod) table4 on (C_ProjectProposal.FIN_Paymentmethod_ID = table4.FIN_Paymentmethod_ID) left join (select C_PaymentTerm_ID, Name from C_PaymentTerm) table5 on (C_ProjectProposal.C_PaymentTerm_ID = table5.C_PaymentTerm_ID) left join (select C_PaymentTerm_ID,AD_Language, Name from C_PaymentTerm_TRL) tableTRL5 on (table5.C_PaymentTerm_ID = tableTRL5.C_PaymentTerm_ID and tableTRL5.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND C_ProjectProposal.C_Projectproposal_ID = ? 
        AND C_ProjectProposal.AD_Client_ID IN ('1') 
           AND C_ProjectProposal.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="cProjectId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND C_ProjectProposal.C_Project_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_ProjectProposal.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_ProjectProposal.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="cProjectId" id="paramKeyParent"></Parameter>
<Parameter name="cProjectproposalId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="datesend"></Parameter><Parameter name="cBpartnerLocationId"></Parameter><Parameter name="adUserId"></Parameter><Parameter name="copyfrom"></Parameter><Parameter name="headernote"></Parameter><Parameter name="footnote"></Parameter><Parameter name="issotrx"></Parameter><Parameter name="projectwon"></Parameter><Parameter name="paymentrule"></Parameter><Parameter name="cPaymenttermId"></Parameter><Parameter name="finPaymentmethodId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef800068_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as CreatedBy FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef800070_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as UpdatedBy FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef800072_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as C_BPartner_ID FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table2 on (C_BPartner.C_BPartner_ID = table2.C_BPartner_ID) WHERE C_BPartner.isActive='Y' AND C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_BPartner_IDR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_ProjectProposal.C_Project_ID AS NAME
        FROM C_ProjectProposal
        WHERE C_ProjectProposal.C_Projectproposal_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_Project left join (select C_Project_ID, Value, Name from C_Project) table1 on (C_Project.C_Project_ID = table1.C_Project_ID) WHERE C_Project.C_Project_ID = ?  
    ]]></Sql>
<Parameter name="cProjectId"/>

  </SqlMethod>




   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM C_Project left join (select C_Project_ID, Value, Name from C_Project) table1 on (C_Project.C_Project_ID = table1.C_Project_ID) WHERE C_Project.C_Project_ID = ?  
    ]]></Sql>
<Parameter name="cProjectId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_ProjectProposal
        SET C_BPartner_ID = (?) , C_BPartner_Location_ID = (?) , Datesend = TO_DATE(?) , AD_User_ID = (?) , IsSOTrx = (?) , FIN_Paymentmethod_ID = (?) , C_PaymentTerm_ID = (?) , HeaderNote = (?) , FootNote = (?) , CopyFrom = (?) , Projectwon = (?) , PaymentRule = (?) , C_Project_ID = (?) , C_Projectproposal_ID = (?) , AD_Client_ID = (?) , IsActive = (?) , AD_Org_ID = (?) , updated = now(), updatedby = ? 
        WHERE C_ProjectProposal.C_Projectproposal_ID = ? 
                 AND C_ProjectProposal.C_Project_ID = ? 
        AND C_ProjectProposal.AD_Client_ID IN ('1') 
        AND C_ProjectProposal.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="cBpartnerId"></Parameter> <Parameter name="cBpartnerLocationId"></Parameter> <Parameter name="datesend"></Parameter> <Parameter name="adUserId"></Parameter> <Parameter name="issotrx"></Parameter> <Parameter name="finPaymentmethodId"></Parameter> <Parameter name="cPaymenttermId"></Parameter> <Parameter name="headernote"></Parameter> <Parameter name="footnote"></Parameter> <Parameter name="copyfrom"></Parameter> <Parameter name="projectwon"></Parameter> <Parameter name="paymentrule"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="cProjectproposalId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cProjectproposalId"></Parameter>
    
    <Parameter name="cProjectId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_ProjectProposal.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_ProjectProposal.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_ProjectProposal 
        (C_BPartner_ID, C_BPartner_Location_ID, Datesend, AD_User_ID, IsSOTrx, FIN_Paymentmethod_ID, C_PaymentTerm_ID, HeaderNote, FootNote, CopyFrom, Projectwon, PaymentRule, C_Project_ID, C_Projectproposal_ID, AD_Client_ID, IsActive, AD_Org_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), TO_DATE(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="cBpartnerId"></Parameter> <Parameter name="cBpartnerLocationId"></Parameter> <Parameter name="datesend"></Parameter> <Parameter name="adUserId"></Parameter> <Parameter name="issotrx"></Parameter> <Parameter name="finPaymentmethodId"></Parameter> <Parameter name="cPaymenttermId"></Parameter> <Parameter name="headernote"></Parameter> <Parameter name="footnote"></Parameter> <Parameter name="copyfrom"></Parameter> <Parameter name="projectwon"></Parameter> <Parameter name="paymentrule"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="cProjectproposalId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_ProjectProposal
        WHERE C_ProjectProposal.C_Projectproposal_ID = ? 
                 AND C_ProjectProposal.C_Project_ID = ? 
        AND C_ProjectProposal.AD_Client_ID IN ('1') 
        AND C_ProjectProposal.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="cProjectId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_ProjectProposal.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_ProjectProposal.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_ProjectProposal
         WHERE C_ProjectProposal.C_Projectproposal_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_ProjectProposal
         WHERE C_ProjectProposal.C_Projectproposal_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>