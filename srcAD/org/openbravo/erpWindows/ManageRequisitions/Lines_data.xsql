<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="LinesData" package="org.openbravo.erpWindows.ManageRequisitions">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(M_RequisitionLine.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_RequisitionLine.CreatedBy) as CreatedByR, 
        to_char(M_RequisitionLine.Updated, ?) as updated, 
        to_char(M_RequisitionLine.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        M_RequisitionLine.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_RequisitionLine.UpdatedBy) as UpdatedByR,
        M_RequisitionLine.Line, 
M_RequisitionLine.Needbydate, 
M_RequisitionLine.M_Product_ID, 
(CASE WHEN M_RequisitionLine.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.EM_Rcgi_Ksmlbarcode), ''))),'') ) END) AS M_Product_IDR, 
M_RequisitionLine.M_AttributeSetInstance_ID, 
(CASE WHEN M_RequisitionLine.M_AttributeSetInstance_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Description), ''))),'') ) END) AS M_AttributeSetInstance_IDR, 
M_RequisitionLine.Qty, 
M_RequisitionLine.C_UOM_ID, 
(CASE WHEN M_RequisitionLine.C_UOM_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'') ) END) AS C_UOM_IDR, 
M_RequisitionLine.C_BPartner_ID, 
(CASE WHEN M_RequisitionLine.C_BPartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS C_BPartner_IDR, 
M_RequisitionLine.M_PriceList_ID, 
(CASE WHEN M_RequisitionLine.M_PriceList_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Name), ''))),'') ) END) AS M_PriceList_IDR, 
M_RequisitionLine.PriceActual, 
M_RequisitionLine.LineNetAmt, 
M_RequisitionLine.C_Currency_ID, 
(CASE WHEN M_RequisitionLine.C_Currency_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.ISO_Code), ''))),'') ) END) AS C_Currency_IDR, 
M_RequisitionLine.Description, 
M_RequisitionLine.PriceList, 
M_RequisitionLine.Discount, 
M_RequisitionLine.Gross_Unit_Price, 
M_RequisitionLine.Gross_Amt, 
M_RequisitionLine.Internalnotes, 
M_RequisitionLine.Suppliernotes, 
M_RequisitionLine.Lockedby, 
(CASE WHEN M_RequisitionLine.Lockedby IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Name), ''))),'') ) END) AS LockedbyR, 
M_RequisitionLine.Lockqty, 
M_RequisitionLine.Lockprice, 
M_RequisitionLine.QuantityOrder, 
M_RequisitionLine.M_Product_Uom_Id, 
(CASE WHEN M_RequisitionLine.M_Product_Uom_Id IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL9.Name IS NULL THEN TO_CHAR(table9.Name) ELSE TO_CHAR(tableTRL9.Name) END)), ''))),'') ) END) AS M_Product_Uom_IdR, 
M_RequisitionLine.Changestatus, 
M_RequisitionLine.Lockcause, 
M_RequisitionLine.Orderedqty, 
M_RequisitionLine.Lockdate, 
M_RequisitionLine.Reqstatus, 
M_RequisitionLine.AD_Org_ID, 
COALESCE(M_RequisitionLine.IsActive, 'N') AS IsActive, 
M_RequisitionLine.AD_Client_ID, 
M_RequisitionLine.M_Requisitionline_ID, 
M_RequisitionLine.M_Requisition_ID, 
 
        ? AS LANGUAGE 
        FROM M_RequisitionLine left join (select M_Product_ID, Value, Name, EM_Rcgi_Ksmlbarcode from M_Product) table1 on (M_RequisitionLine.M_Product_ID = table1.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL1 on (table1.M_Product_ID = tableTRL1.M_Product_ID and tableTRL1.AD_Language = ?)  left join (select M_AttributeSetInstance_ID, Description from M_AttributeSetInstance) table2 on (M_RequisitionLine.M_AttributeSetInstance_ID = table2.M_AttributeSetInstance_ID) left join (select C_UOM_ID, Name from C_UOM) table3 on (M_RequisitionLine.C_UOM_ID = table3.C_UOM_ID) left join (select C_UOM_ID,AD_Language, Name from C_UOM_TRL) tableTRL3 on (table3.C_UOM_ID = tableTRL3.C_UOM_ID and tableTRL3.AD_Language = ?)  left join (select C_BPartner_ID, Name from C_BPartner) table4 on (M_RequisitionLine.C_BPartner_ID = table4.C_BPartner_ID) left join (select M_PriceList_ID, Name from M_PriceList) table5 on (M_RequisitionLine.M_PriceList_ID = table5.M_PriceList_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table6 on (M_RequisitionLine.C_Currency_ID = table6.C_Currency_ID) left join (select AD_User_ID, Name from AD_User) table7 on (M_RequisitionLine.Lockedby =  table7.AD_User_ID) left join (select M_Product_Uom_Id, C_UOM_ID from M_Product_Uom) table8 on (M_RequisitionLine.M_Product_Uom_Id = table8.M_Product_Uom_Id) left join (select C_UOM_ID, Name from C_UOM) table9 on (table8.C_UOM_ID = table9.C_UOM_ID) left join (select C_UOM_ID,AD_Language, Name from C_UOM_TRL) tableTRL9 on (table9.C_UOM_ID = tableTRL9.C_UOM_ID and tableTRL9.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND M_RequisitionLine.M_Requisitionline_ID = ? 
        AND M_RequisitionLine.AD_Client_ID IN ('1') 
           AND M_RequisitionLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="mRequisitionId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND M_RequisitionLine.M_Requisition_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_RequisitionLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_RequisitionLine.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="mRequisitionId" id="paramKeyParent"></Parameter>
<Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="cUomId"></Parameter><Parameter name="mProductUomId"></Parameter><Parameter name="quantityorder"></Parameter><Parameter name="mAttributesetinstanceId"></Parameter><Parameter name="mAttributesetinstanceIdr"></Parameter><Parameter name="reqstatus"></Parameter><Parameter name="orderedqty"></Parameter><Parameter name="description"></Parameter><Parameter name="changestatus"></Parameter><Parameter name="internalnotes"></Parameter><Parameter name="suppliernotes"></Parameter><Parameter name="needbydate"></Parameter><Parameter name="priceactual"></Parameter><Parameter name="discount"></Parameter><Parameter name="cCurrencyId"></Parameter><Parameter name="lockedby"></Parameter><Parameter name="lockqty"></Parameter><Parameter name="lockprice"></Parameter><Parameter name="mPricelistId"></Parameter><Parameter name="lockdate"></Parameter><Parameter name="lockcause"></Parameter><Parameter name="line"></Parameter><Parameter name="grossAmt"></Parameter><Parameter name="mRequisitionlineId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="mProductId"></Parameter><Parameter name="qty"></Parameter><Parameter name="pricelist"></Parameter><Parameter name="linenetamt"></Parameter><Parameter name="grossUnitPrice"></Parameter>
   </SqlMethod>


   <SqlMethod name="selectAux2252C06D4EA7419FA38E7B5565EF411C" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT istaxincluded from m_pricelist where m_pricelist_id = CASE WHEN COALESCE(?,'') <> ''   THEN ?   ELSE  (SELECT m_pricelist_id from m_requisition where m_requisition_id = ?) END 
    ]]></Sql>

<Parameter name="M_PRICELIST_ID"/>
<Parameter name="M_PRICELIST_ID"/>
<Parameter name="M_Requisition_ID"/>
  </SqlMethod>

   <SqlMethod name="selectAux485726718FCD47AFB101C59FC1BD365E" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_ATTRIBUTESET_ID FROM M_PRODUCT WHERE M_PRODUCT_ID=? 
    ]]></Sql>

<Parameter name="M_Product_ID"/>
  </SqlMethod>

   <SqlMethod name="selectAuxACA00D8708854C3E80E50FE99724C4E8" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT ATTRSETVALUETYPE FROM M_PRODUCT WHERE M_PRODUCT_ID=? 
    ]]></Sql>

<Parameter name="M_Product_ID"/>
  </SqlMethod>





   <SqlMethod name="selectDef1004400000_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as C_BPartner_ID FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table2 on (C_BPartner.C_BPartner_ID = table2.C_BPartner_ID) WHERE C_BPartner.isActive='Y' AND C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_BPartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef1004400004_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Description), ''))), '') ) as M_AttributeSetInstance_ID FROM M_AttributeSetInstance left join (select M_AttributeSetInstance_ID, Description from M_AttributeSetInstance) table2 on (M_AttributeSetInstance.M_AttributeSetInstance_ID = table2.M_AttributeSetInstance_ID) WHERE M_AttributeSetInstance.isActive='Y' AND M_AttributeSetInstance.M_AttributeSetInstance_ID = ?  
    ]]></Sql>
<Parameter name="M_AttributeSetInstance_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef1004400040" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT COALESCE(MAX(LINE),0)+10 AS DefaultValue FROM M_REQUISITIONLINE WHERE M_Requisition_ID=? 
    ]]></Sql>

<Parameter name="M_Requisition_ID"/>
  </SqlMethod>

   <SqlMethod name="selectDef803547_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Createdby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef803549_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Updatedby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_RequisitionLine.M_Requisition_ID AS NAME
        FROM M_RequisitionLine
        WHERE M_RequisitionLine.M_Requisitionline_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DocumentNo), ''))) AS NAME FROM M_Requisition left join (select M_Requisition_ID, DocumentNo from M_Requisition) table1 on (M_Requisition.M_Requisition_ID = table1.M_Requisition_ID) WHERE M_Requisition.M_Requisition_ID = ?  
    ]]></Sql>
<Parameter name="mRequisitionId"/>

  </SqlMethod>




   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DocumentNo), ''))) AS NAME FROM M_Requisition left join (select M_Requisition_ID, DocumentNo from M_Requisition) table1 on (M_Requisition.M_Requisition_ID = table1.M_Requisition_ID) WHERE M_Requisition.M_Requisition_ID = ?  
    ]]></Sql>
<Parameter name="mRequisitionId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE M_RequisitionLine
        SET Line = TO_NUMBER(?) , Needbydate = TO_DATE(?) , M_Product_ID = (?) , M_AttributeSetInstance_ID = (?) , Qty = TO_NUMBER(?) , C_UOM_ID = (?) , C_BPartner_ID = (?) , M_PriceList_ID = (?) , PriceActual = TO_NUMBER(?) , LineNetAmt = TO_NUMBER(?) , C_Currency_ID = (?) , Description = (?) , PriceList = TO_NUMBER(?) , Discount = TO_NUMBER(?) , Gross_Unit_Price = TO_NUMBER(?) , Gross_Amt = TO_NUMBER(?) , Internalnotes = (?) , Suppliernotes = (?) , Lockedby = (?) , Lockqty = TO_NUMBER(?) , Lockprice = TO_NUMBER(?) , QuantityOrder = TO_NUMBER(?) , M_Product_Uom_Id = (?) , Changestatus = (?) , Lockcause = (?) , Orderedqty = TO_NUMBER(?) , Lockdate = TO_DATE(?) , Reqstatus = (?) , AD_Org_ID = (?) , IsActive = (?) , AD_Client_ID = (?) , M_Requisitionline_ID = (?) , M_Requisition_ID = (?) , updated = now(), updatedby = ? 
        WHERE M_RequisitionLine.M_Requisitionline_ID = ? 
                 AND M_RequisitionLine.M_Requisition_ID = ? 
        AND M_RequisitionLine.AD_Client_ID IN ('1') 
        AND M_RequisitionLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="line"></Parameter> <Parameter name="needbydate"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="mAttributesetinstanceId"></Parameter> <Parameter name="qty"></Parameter> <Parameter name="cUomId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="priceactual"></Parameter> <Parameter name="linenetamt"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="pricelist"></Parameter> <Parameter name="discount"></Parameter> <Parameter name="grossUnitPrice"></Parameter> <Parameter name="grossAmt"></Parameter> <Parameter name="internalnotes"></Parameter> <Parameter name="suppliernotes"></Parameter> <Parameter name="lockedby"></Parameter> <Parameter name="lockqty"></Parameter> <Parameter name="lockprice"></Parameter> <Parameter name="quantityorder"></Parameter> <Parameter name="mProductUomId"></Parameter> <Parameter name="changestatus"></Parameter> <Parameter name="lockcause"></Parameter> <Parameter name="orderedqty"></Parameter> <Parameter name="lockdate"></Parameter> <Parameter name="reqstatus"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="mRequisitionlineId"></Parameter> <Parameter name="mRequisitionId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mRequisitionlineId"></Parameter>
    
    <Parameter name="mRequisitionId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_RequisitionLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_RequisitionLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO M_RequisitionLine 
        (Line, Needbydate, M_Product_ID, M_AttributeSetInstance_ID, Qty, C_UOM_ID, C_BPartner_ID, M_PriceList_ID, PriceActual, LineNetAmt, C_Currency_ID, Description, PriceList, Discount, Gross_Unit_Price, Gross_Amt, Internalnotes, Suppliernotes, Lockedby, Lockqty, Lockprice, QuantityOrder, M_Product_Uom_Id, Changestatus, Lockcause, Orderedqty, Lockdate, Reqstatus, AD_Org_ID, IsActive, AD_Client_ID, M_Requisitionline_ID, M_Requisition_ID, created, createdby, updated, updatedBy)
        VALUES (TO_NUMBER(?), TO_DATE(?), (?), (?), TO_NUMBER(?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), TO_NUMBER(?), TO_DATE(?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="line"></Parameter> <Parameter name="needbydate"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="mAttributesetinstanceId"></Parameter> <Parameter name="qty"></Parameter> <Parameter name="cUomId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="priceactual"></Parameter> <Parameter name="linenetamt"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="pricelist"></Parameter> <Parameter name="discount"></Parameter> <Parameter name="grossUnitPrice"></Parameter> <Parameter name="grossAmt"></Parameter> <Parameter name="internalnotes"></Parameter> <Parameter name="suppliernotes"></Parameter> <Parameter name="lockedby"></Parameter> <Parameter name="lockqty"></Parameter> <Parameter name="lockprice"></Parameter> <Parameter name="quantityorder"></Parameter> <Parameter name="mProductUomId"></Parameter> <Parameter name="changestatus"></Parameter> <Parameter name="lockcause"></Parameter> <Parameter name="orderedqty"></Parameter> <Parameter name="lockdate"></Parameter> <Parameter name="reqstatus"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="mRequisitionlineId"></Parameter> <Parameter name="mRequisitionId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_RequisitionLine
        WHERE M_RequisitionLine.M_Requisitionline_ID = ? 
                 AND M_RequisitionLine.M_Requisition_ID = ? 
        AND M_RequisitionLine.AD_Client_ID IN ('1') 
        AND M_RequisitionLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mRequisitionId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_RequisitionLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_RequisitionLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM M_RequisitionLine
         WHERE M_RequisitionLine.M_Requisitionline_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM M_RequisitionLine
         WHERE M_RequisitionLine.M_Requisitionline_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>