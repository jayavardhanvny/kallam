<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="HeaderData" package="org.openbravo.erpWindows.PaymentOut">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(FIN_Payment.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = FIN_Payment.CreatedBy) as CreatedByR, 
        to_char(FIN_Payment.Updated, ?) as updated, 
        to_char(FIN_Payment.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        FIN_Payment.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = FIN_Payment.UpdatedBy) as UpdatedByR,
        FIN_Payment.AD_Org_ID, 
(CASE WHEN FIN_Payment.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Org_IDR, 
FIN_Payment.C_DocType_ID, 
(CASE WHEN FIN_Payment.C_DocType_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), ''))),'') ) END) AS C_DocType_IDR, 
FIN_Payment.DocumentNo, 
FIN_Payment.Referenceno, 
FIN_Payment.Paymentdate, 
FIN_Payment.C_Bpartner_ID, 
(CASE WHEN FIN_Payment.C_Bpartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS C_Bpartner_IDR, 
FIN_Payment.Description, 
FIN_Payment.Fin_Paymentmethod_ID, 
(CASE WHEN FIN_Payment.Fin_Paymentmethod_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS Fin_Paymentmethod_IDR, 
FIN_Payment.Fin_Financial_Account_ID, 
(CASE WHEN FIN_Payment.Fin_Financial_Account_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.ISO_Code), ''))),'') ) END) AS Fin_Financial_Account_IDR, 
FIN_Payment.Epcg_Cblines_ID, 
(CASE WHEN FIN_Payment.Epcg_Cblines_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Chequeno), ''))),'') ) END) AS Epcg_Cblines_IDR, 
FIN_Payment.C_Currency_ID, 
(CASE WHEN FIN_Payment.C_Currency_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.ISO_Code), ''))),'') ) END) AS C_Currency_IDR, 
FIN_Payment.Finacc_Txn_Amount, 
FIN_Payment.Finacc_Txn_Convert_Rate, 
FIN_Payment.Generated_Credit, 
FIN_Payment.EM_Epcg_Lrno, 
FIN_Payment.EM_Epcg_Vehicle, 
FIN_Payment.EM_Aprm_Add_Scheduledpayments, 
FIN_Payment.Posted, 
list1.name as Posted_BTN, 
FIN_Payment.EM_APRM_Process_Payment, 
list2.name as EM_APRM_Process_Payment_BTN, 
FIN_Payment.EM_Aprm_Executepayment, 
FIN_Payment.Amount, 
FIN_Payment.Status, 
FIN_Payment.Used_Credit, 
FIN_Payment.Writeoffamt, 
FIN_Payment.EM_APRM_ReversePayment, 
FIN_Payment.FIN_Rev_Payment_ID, 
COALESCE(FIN_Payment.CreatedByAlgorithm, 'N') AS CreatedByAlgorithm, 
FIN_Payment.C_Project_ID, 
(CASE WHEN FIN_Payment.C_Project_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Name), ''))),'') ) END) AS C_Project_IDR, 
FIN_Payment.C_Costcenter_ID, 
FIN_Payment.C_Activity_ID, 
FIN_Payment.C_Campaign_ID, 
FIN_Payment.User1_ID, 
FIN_Payment.User2_ID, 
FIN_Payment.EM_Epcg_Checktype, 
COALESCE(FIN_Payment.Processed, 'N') AS Processed, 
FIN_Payment.AD_Client_ID, 
COALESCE(FIN_Payment.Isactive, 'N') AS Isactive, 
FIN_Payment.Fin_Payment_ID, 
FIN_Payment.EM_APRM_Reconcile_Payment, 
COALESCE(FIN_Payment.Isreceipt, 'N') AS Isreceipt, 
COALESCE(FIN_Payment.Processing, 'N') AS Processing, 
 
        ? AS LANGUAGE 
        FROM FIN_Payment left join (select AD_Org_ID, Name from AD_Org) table1 on (FIN_Payment.AD_Org_ID = table1.AD_Org_ID) left join (select C_DocType_ID, Name from C_DocType) table2 on (FIN_Payment.C_DocType_ID = table2.C_DocType_ID) left join (select C_DocType_ID,AD_Language, Name from C_DocType_TRL) tableTRL2 on (table2.C_DocType_ID = tableTRL2.C_DocType_ID and tableTRL2.AD_Language = ?)  left join (select C_BPartner_ID, Name from C_BPartner) table3 on (FIN_Payment.C_Bpartner_ID = table3.C_BPartner_ID) left join (select Fin_Paymentmethod_ID, Name from Fin_Paymentmethod) table4 on (FIN_Payment.Fin_Paymentmethod_ID = table4.Fin_Paymentmethod_ID) left join (select Fin_Financial_Account_ID, Name, C_Currency_ID from Fin_Financial_Account) table5 on (FIN_Payment.Fin_Financial_Account_ID = table5.Fin_Financial_Account_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table6 on (table5.C_Currency_ID = table6.C_Currency_ID) left join (select Epcg_Cblines_ID, Chequeno from Epcg_Cblines) table7 on (FIN_Payment.Epcg_Cblines_ID = table7.Epcg_Cblines_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table8 on (FIN_Payment.C_Currency_ID = table8.C_Currency_ID) left join ad_ref_list_v list1 on (list1.ad_reference_id = '234' and list1.ad_language = ?  AND FIN_Payment.Posted = TO_CHAR(list1.value)) left join ad_ref_list_v list2 on (list2.ad_reference_id = '36972531DA994BB38ECB91993058282F' and list2.ad_language = ?  AND FIN_Payment.EM_APRM_Process_Payment = TO_CHAR(list2.value)) left join (select C_Project_ID, Value, Name from C_Project) table9 on (FIN_Payment.C_Project_ID = table9.C_Project_ID)
        WHERE 2=2 
 AND FIN_Payment.isReceipt='N'
        AND 1=1 
        AND FIN_Payment.Fin_Payment_ID = ? 
        AND FIN_Payment.AD_Client_ID IN ('1') 
           AND FIN_Payment.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Payment.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Payment.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="finFinancialAccountId"></Parameter><Parameter name="cCostcenterId"></Parameter><Parameter name="createdbyalgorithm"></Parameter><Parameter name="finaccTxnConvertRate"></Parameter><Parameter name="finaccTxnAmount"></Parameter><Parameter name="emEpcgLrno"></Parameter><Parameter name="finPaymentId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="isreceipt"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="paymentdate"></Parameter><Parameter name="cCurrencyId"></Parameter><Parameter name="amount"></Parameter><Parameter name="writeoffamt"></Parameter><Parameter name="documentno"></Parameter><Parameter name="referenceno"></Parameter><Parameter name="status"></Parameter><Parameter name="processed"></Parameter><Parameter name="processing"></Parameter><Parameter name="posted"></Parameter><Parameter name="postedBtn"></Parameter><Parameter name="finPaymentmethodId"></Parameter><Parameter name="emAprmProcessPayment"></Parameter><Parameter name="emAprmProcessPaymentBtn"></Parameter><Parameter name="emAprmReconcilePayment"></Parameter><Parameter name="emAprmAddScheduledpayments"></Parameter><Parameter name="cDoctypeId"></Parameter><Parameter name="cProjectId"></Parameter><Parameter name="cProjectIdr"></Parameter><Parameter name="cCampaignId"></Parameter><Parameter name="cActivityId"></Parameter><Parameter name="user1Id"></Parameter><Parameter name="user2Id"></Parameter><Parameter name="emEpcgVehicle"></Parameter><Parameter name="emAprmExecutepayment"></Parameter><Parameter name="description"></Parameter><Parameter name="generatedCredit"></Parameter><Parameter name="usedCredit"></Parameter><Parameter name="epcgCblinesId"></Parameter><Parameter name="emAprmReversepayment"></Parameter><Parameter name="finRevPaymentId"></Parameter><Parameter name="emEpcgChecktype"></Parameter>
   </SqlMethod>


   <SqlMethod name="selectAux40289DEF2E1E98E4012E1EE6C6CD002E" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_CURRENCY_ID FROM FIN_FINANCIAL_ACCOUNT WHERE FIN_FINANCIAL_ACCOUNT_ID=? 
    ]]></Sql>

<Parameter name="FIN_FINANCIAL_ACCOUNT_ID"/>
  </SqlMethod>

   <SqlMethod name="selectAuxFF8080812E26BF58012E27DC86DE016C" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (CASE count(*) WHEN 0 THEN 'N' ELSE 'Y' END) from fin_finacc_paymentmethod 
where fin_financial_account_id = ?
and fin_paymentmethod_id = ? and isactive='Y'
and payout_allow ='Y' and payout_ismulticurrency='Y'

 
    ]]></Sql>

<Parameter name="FIN_Financial_Account_ID"/>
<Parameter name="FIN_PaymentMethod_ID"/>
  </SqlMethod>





   <SqlMethod name="selectDef7891269C83D4655DE040007F010155CE_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Createdby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef7891269C83D6655DE040007F010155CE_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Updatedby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef7891269C83D9655DE040007F010155CE_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as C_Bpartner_ID FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table2 on (C_BPartner.C_BPartner_ID = table2.C_BPartner_ID) WHERE C_BPartner.isActive='Y' AND C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_Bpartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef8032E178607750D5E040007F01004282" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT C_DocType_ID from C_DocType WHERE AD_ISORGINCLUDED(?,C_DocType.AD_Org_ID, ?) <> -1 AND C_DocType.DocBaseType IN ('APP', 'ARR') AND C_DocType.IsSOTrx=?  ORDER BY C_DocType.isdefault DESC, AD_ISORGINCLUDED(?,C_DocType.AD_Org_ID, ?) 
    ]]></Sql>

<Parameter name="AD_Org_ID"/>
<Parameter name="AD_Client_ID"/>
<Parameter name="Isreceipt"/>
<Parameter name="AD_Org_ID"/>
<Parameter name="AD_Client_ID"/>
  </SqlMethod>

   <SqlMethod name="selectDef828EE0AE800D5FA1E040007F010067C7_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Value), ''))), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as C_Project_ID FROM C_Project left join (select C_Project_ID, Value, Name from C_Project) table2 on (C_Project.C_Project_ID = table2.C_Project_ID) WHERE C_Project.isActive='Y' AND C_Project.C_Project_ID = ?  
    ]]></Sql>
<Parameter name="C_Project_IDR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE FIN_Payment
        SET AD_Org_ID = (?) , C_DocType_ID = (?) , DocumentNo = (?) , Referenceno = (?) , Paymentdate = TO_DATE(?) , C_Bpartner_ID = (?) , Description = (?) , Fin_Paymentmethod_ID = (?) , Fin_Financial_Account_ID = (?) , Epcg_Cblines_ID = (?) , C_Currency_ID = (?) , Finacc_Txn_Amount = TO_NUMBER(?) , Finacc_Txn_Convert_Rate = TO_NUMBER(?) , Generated_Credit = TO_NUMBER(?) , EM_Epcg_Lrno = (?) , EM_Epcg_Vehicle = (?) , EM_Aprm_Add_Scheduledpayments = (?) , Posted = (?) , EM_APRM_Process_Payment = (?) , EM_Aprm_Executepayment = (?) , Amount = TO_NUMBER(?) , Status = (?) , Used_Credit = TO_NUMBER(?) , Writeoffamt = TO_NUMBER(?) , EM_APRM_ReversePayment = (?) , FIN_Rev_Payment_ID = (?) , CreatedByAlgorithm = (?) , C_Project_ID = (?) , C_Costcenter_ID = (?) , C_Activity_ID = (?) , C_Campaign_ID = (?) , User1_ID = (?) , User2_ID = (?) , EM_Epcg_Checktype = (?) , Processed = (?) , AD_Client_ID = (?) , Isactive = (?) , Fin_Payment_ID = (?) , EM_APRM_Reconcile_Payment = (?) , Isreceipt = (?) , Processing = (?) , updated = now(), updatedby = ? 
        WHERE FIN_Payment.Fin_Payment_ID = ? 
        
        AND FIN_Payment.AD_Client_ID IN ('1') 
        AND FIN_Payment.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="documentno"></Parameter> <Parameter name="referenceno"></Parameter> <Parameter name="paymentdate"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="finPaymentmethodId"></Parameter> <Parameter name="finFinancialAccountId"></Parameter> <Parameter name="epcgCblinesId"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="finaccTxnAmount"></Parameter> <Parameter name="finaccTxnConvertRate"></Parameter> <Parameter name="generatedCredit"></Parameter> <Parameter name="emEpcgLrno"></Parameter> <Parameter name="emEpcgVehicle"></Parameter> <Parameter name="emAprmAddScheduledpayments"></Parameter> <Parameter name="posted"></Parameter> <Parameter name="emAprmProcessPayment"></Parameter> <Parameter name="emAprmExecutepayment"></Parameter> <Parameter name="amount"></Parameter> <Parameter name="status"></Parameter> <Parameter name="usedCredit"></Parameter> <Parameter name="writeoffamt"></Parameter> <Parameter name="emAprmReversepayment"></Parameter> <Parameter name="finRevPaymentId"></Parameter> <Parameter name="createdbyalgorithm"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="cCostcenterId"></Parameter> <Parameter name="cActivityId"></Parameter> <Parameter name="cCampaignId"></Parameter> <Parameter name="user1Id"></Parameter> <Parameter name="user2Id"></Parameter> <Parameter name="emEpcgChecktype"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="finPaymentId"></Parameter> <Parameter name="emAprmReconcilePayment"></Parameter> <Parameter name="isreceipt"></Parameter> <Parameter name="processing"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="finPaymentId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Payment.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Payment.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO FIN_Payment 
        (AD_Org_ID, C_DocType_ID, DocumentNo, Referenceno, Paymentdate, C_Bpartner_ID, Description, Fin_Paymentmethod_ID, Fin_Financial_Account_ID, Epcg_Cblines_ID, C_Currency_ID, Finacc_Txn_Amount, Finacc_Txn_Convert_Rate, Generated_Credit, EM_Epcg_Lrno, EM_Epcg_Vehicle, EM_Aprm_Add_Scheduledpayments, Posted, EM_APRM_Process_Payment, EM_Aprm_Executepayment, Amount, Status, Used_Credit, Writeoffamt, EM_APRM_ReversePayment, FIN_Rev_Payment_ID, CreatedByAlgorithm, C_Project_ID, C_Costcenter_ID, C_Activity_ID, C_Campaign_ID, User1_ID, User2_ID, EM_Epcg_Checktype, Processed, AD_Client_ID, Isactive, Fin_Payment_ID, EM_APRM_Reconcile_Payment, Isreceipt, Processing, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), TO_DATE(?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="documentno"></Parameter> <Parameter name="referenceno"></Parameter> <Parameter name="paymentdate"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="finPaymentmethodId"></Parameter> <Parameter name="finFinancialAccountId"></Parameter> <Parameter name="epcgCblinesId"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="finaccTxnAmount"></Parameter> <Parameter name="finaccTxnConvertRate"></Parameter> <Parameter name="generatedCredit"></Parameter> <Parameter name="emEpcgLrno"></Parameter> <Parameter name="emEpcgVehicle"></Parameter> <Parameter name="emAprmAddScheduledpayments"></Parameter> <Parameter name="posted"></Parameter> <Parameter name="emAprmProcessPayment"></Parameter> <Parameter name="emAprmExecutepayment"></Parameter> <Parameter name="amount"></Parameter> <Parameter name="status"></Parameter> <Parameter name="usedCredit"></Parameter> <Parameter name="writeoffamt"></Parameter> <Parameter name="emAprmReversepayment"></Parameter> <Parameter name="finRevPaymentId"></Parameter> <Parameter name="createdbyalgorithm"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="cCostcenterId"></Parameter> <Parameter name="cActivityId"></Parameter> <Parameter name="cCampaignId"></Parameter> <Parameter name="user1Id"></Parameter> <Parameter name="user2Id"></Parameter> <Parameter name="emEpcgChecktype"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="finPaymentId"></Parameter> <Parameter name="emAprmReconcilePayment"></Parameter> <Parameter name="isreceipt"></Parameter> <Parameter name="processing"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM FIN_Payment
        WHERE FIN_Payment.Fin_Payment_ID = ? 
        
        AND FIN_Payment.AD_Client_ID IN ('1') 
        AND FIN_Payment.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Payment.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Payment.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM FIN_Payment
         WHERE FIN_Payment.Fin_Payment_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM FIN_Payment
         WHERE FIN_Payment.Fin_Payment_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>