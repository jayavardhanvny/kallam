<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="GeneralLedgerConfigurationData" package="org.openbravo.erpWindows.GeneralLedgerConfiguration">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(C_AcctSchema.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_AcctSchema.CreatedBy) as CreatedByR, 
        to_char(C_AcctSchema.Updated, ?) as updated, 
        to_char(C_AcctSchema.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        C_AcctSchema.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = C_AcctSchema.UpdatedBy) as UpdatedByR,
        C_AcctSchema.AD_Org_ID, 
(CASE WHEN C_AcctSchema.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Org_IDR, 
C_AcctSchema.Name, 
C_AcctSchema.Description, 
COALESCE(C_AcctSchema.IsActive, 'N') AS IsActive, 
C_AcctSchema.GAAP, 
C_AcctSchema.C_Currency_ID, 
(CASE WHEN C_AcctSchema.C_Currency_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.ISO_Code), ''))),'') ) END) AS C_Currency_IDR, 
C_AcctSchema.C_Period_ID, 
C_AcctSchema.Separator, 
COALESCE(C_AcctSchema.Allownegative, 'N') AS Allownegative, 
COALESCE(C_AcctSchema.IsAccrual, 'N') AS IsAccrual, 
C_AcctSchema.CostingMethod, 
COALESCE(C_AcctSchema.AutoPeriodControl, 'N') AS AutoPeriodControl, 
C_AcctSchema.Period_OpenHistory, 
C_AcctSchema.Period_OpenFuture, 
COALESCE(C_AcctSchema.HasAlias, 'N') AS HasAlias, 
COALESCE(C_AcctSchema.IsTradeDiscountPosted, 'N') AS IsTradeDiscountPosted, 
COALESCE(C_AcctSchema.IsDiscountCorrectsTax, 'N') AS IsDiscountCorrectsTax, 
COALESCE(C_AcctSchema.Iscentrallymaintained, 'N') AS Iscentrallymaintained, 
COALESCE(C_AcctSchema.IsAssetPositive, 'N') AS IsAssetPositive, 
COALESCE(C_AcctSchema.IsLiabilityPositive, 'N') AS IsLiabilityPositive, 
COALESCE(C_AcctSchema.IsEquityPositive, 'N') AS IsEquityPositive, 
COALESCE(C_AcctSchema.IsRevenuePositive, 'N') AS IsRevenuePositive, 
COALESCE(C_AcctSchema.IsExpensePositive, 'N') AS IsExpensePositive, 
COALESCE(C_AcctSchema.HasCombination, 'N') AS HasCombination, 
C_AcctSchema.AD_Client_ID, 
C_AcctSchema.C_AcctSchema_ID, 
 
        ? AS LANGUAGE 
        FROM C_AcctSchema left join (select AD_Org_ID, Name from AD_Org) table1 on (C_AcctSchema.AD_Org_ID = table1.AD_Org_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table2 on (C_AcctSchema.C_Currency_ID = table2.C_Currency_ID)
        WHERE 2=2 

        AND 1=1 
        AND C_AcctSchema.C_AcctSchema_ID = ? 
        AND C_AcctSchema.AD_Client_ID IN ('1') 
           AND C_AcctSchema.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="C_AcctSchema.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_AcctSchema.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="allownegative"></Parameter><Parameter name="isliabilitypositive"></Parameter><Parameter name="cAcctschemaId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="name"></Parameter><Parameter name="description"></Parameter><Parameter name="gaap"></Parameter><Parameter name="isaccrual"></Parameter><Parameter name="costingmethod"></Parameter><Parameter name="cCurrencyId"></Parameter><Parameter name="autoperiodcontrol"></Parameter><Parameter name="cPeriodId"></Parameter><Parameter name="periodOpenhistory"></Parameter><Parameter name="periodOpenfuture"></Parameter><Parameter name="separator"></Parameter><Parameter name="hasalias"></Parameter><Parameter name="hascombination"></Parameter><Parameter name="isexpensepositive"></Parameter><Parameter name="iscentrallymaintained"></Parameter><Parameter name="istradediscountposted"></Parameter><Parameter name="isdiscountcorrectstax"></Parameter><Parameter name="isequitypositive"></Parameter><Parameter name="isrevenuepositive"></Parameter><Parameter name="isassetpositive"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef2468_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as CreatedBy FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2470_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as UpdatedBy FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE C_AcctSchema
        SET AD_Org_ID = (?) , Name = (?) , Description = (?) , IsActive = (?) , GAAP = (?) , C_Currency_ID = (?) , C_Period_ID = (?) , Separator = (?) , Allownegative = (?) , IsAccrual = (?) , CostingMethod = (?) , AutoPeriodControl = (?) , Period_OpenHistory = TO_NUMBER(?) , Period_OpenFuture = TO_NUMBER(?) , HasAlias = (?) , IsTradeDiscountPosted = (?) , IsDiscountCorrectsTax = (?) , Iscentrallymaintained = (?) , IsAssetPositive = (?) , IsLiabilityPositive = (?) , IsEquityPositive = (?) , IsRevenuePositive = (?) , IsExpensePositive = (?) , HasCombination = (?) , AD_Client_ID = (?) , C_AcctSchema_ID = (?) , updated = now(), updatedby = ? 
        WHERE C_AcctSchema.C_AcctSchema_ID = ? 
        
        AND C_AcctSchema.AD_Client_ID IN ('1') 
        AND C_AcctSchema.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="gaap"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="cPeriodId"></Parameter> <Parameter name="separator"></Parameter> <Parameter name="allownegative"></Parameter> <Parameter name="isaccrual"></Parameter> <Parameter name="costingmethod"></Parameter> <Parameter name="autoperiodcontrol"></Parameter> <Parameter name="periodOpenhistory"></Parameter> <Parameter name="periodOpenfuture"></Parameter> <Parameter name="hasalias"></Parameter> <Parameter name="istradediscountposted"></Parameter> <Parameter name="isdiscountcorrectstax"></Parameter> <Parameter name="iscentrallymaintained"></Parameter> <Parameter name="isassetpositive"></Parameter> <Parameter name="isliabilitypositive"></Parameter> <Parameter name="isequitypositive"></Parameter> <Parameter name="isrevenuepositive"></Parameter> <Parameter name="isexpensepositive"></Parameter> <Parameter name="hascombination"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="cAcctschemaId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="cAcctschemaId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="C_AcctSchema.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_AcctSchema.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO C_AcctSchema 
        (AD_Org_ID, Name, Description, IsActive, GAAP, C_Currency_ID, C_Period_ID, Separator, Allownegative, IsAccrual, CostingMethod, AutoPeriodControl, Period_OpenHistory, Period_OpenFuture, HasAlias, IsTradeDiscountPosted, IsDiscountCorrectsTax, Iscentrallymaintained, IsAssetPositive, IsLiabilityPositive, IsEquityPositive, IsRevenuePositive, IsExpensePositive, HasCombination, AD_Client_ID, C_AcctSchema_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="gaap"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="cPeriodId"></Parameter> <Parameter name="separator"></Parameter> <Parameter name="allownegative"></Parameter> <Parameter name="isaccrual"></Parameter> <Parameter name="costingmethod"></Parameter> <Parameter name="autoperiodcontrol"></Parameter> <Parameter name="periodOpenhistory"></Parameter> <Parameter name="periodOpenfuture"></Parameter> <Parameter name="hasalias"></Parameter> <Parameter name="istradediscountposted"></Parameter> <Parameter name="isdiscountcorrectstax"></Parameter> <Parameter name="iscentrallymaintained"></Parameter> <Parameter name="isassetpositive"></Parameter> <Parameter name="isliabilitypositive"></Parameter> <Parameter name="isequitypositive"></Parameter> <Parameter name="isrevenuepositive"></Parameter> <Parameter name="isexpensepositive"></Parameter> <Parameter name="hascombination"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="cAcctschemaId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM C_AcctSchema
        WHERE C_AcctSchema.C_AcctSchema_ID = ? 
        
        AND C_AcctSchema.AD_Client_ID IN ('1') 
        AND C_AcctSchema.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="C_AcctSchema.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="C_AcctSchema.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM C_AcctSchema
         WHERE C_AcctSchema.C_AcctSchema_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM C_AcctSchema
         WHERE C_AcctSchema.C_AcctSchema_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>