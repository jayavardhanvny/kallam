<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="LinesData" package="org.openbravo.erpWindows.GoodsReceipt">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(M_InOutLine.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_InOutLine.CreatedBy) as CreatedByR, 
        to_char(M_InOutLine.Updated, ?) as updated, 
        to_char(M_InOutLine.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        M_InOutLine.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_InOutLine.UpdatedBy) as UpdatedByR,
        M_InOutLine.Line, 
M_InOutLine.M_Product_ID, 
(CASE WHEN M_InOutLine.M_Product_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
M_InOutLine.M_AttributeSetInstance_ID, 
(CASE WHEN M_InOutLine.M_AttributeSetInstance_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Description), ''))),'') ) END) AS M_AttributeSetInstance_IDR, 
M_InOutLine.M_Condition_Goods_ID, 
M_InOutLine.MovementQty, 
M_InOutLine.C_UOM_ID, 
(CASE WHEN M_InOutLine.C_UOM_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'') ) END) AS C_UOM_IDR, 
M_InOutLine.EM_Rclo_Noofbales, 
M_InOutLine.M_Locator_ID, 
(CASE WHEN M_InOutLine.M_Locator_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Value), ''))),'') ) END) AS M_Locator_IDR, 
M_InOutLine.EM_Epcg_Millsno, 
M_InOutLine.Description, 
M_InOutLine.C_OrderLine_ID, 
(CASE WHEN M_InOutLine.C_OrderLine_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.DocumentNo), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table6.DateOrdered, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.GrandTotal), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Line), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.LineNetAmt), ''))),'') ) END) AS C_OrderLine_IDR, 
M_InOutLine.M_Product_Uom_Id, 
(CASE WHEN M_InOutLine.M_Product_Uom_Id IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS M_Product_Uom_IdR, 
M_InOutLine.QuantityOrder, 
M_InOutLine.Canceled_Inoutline_ID, 
M_InOutLine.Manage_Prereservation, 
M_InOutLine.AD_Org_ID, 
(CASE WHEN M_InOutLine.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Name), ''))),'') ) END) AS AD_Org_IDR, 
M_InOutLine.C_Bpartner_ID, 
M_InOutLine.C_Project_ID, 
(CASE WHEN M_InOutLine.C_Project_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table9.Name), ''))),'') ) END) AS C_Project_IDR, 
M_InOutLine.C_Costcenter_ID, 
M_InOutLine.A_Asset_ID, 
M_InOutLine.User1_ID, 
M_InOutLine.User2_ID, 
M_InOutLine.Explode, 
M_InOutLine.BOM_Parent_ID, 
M_InOutLine.EM_Epcg_Tarewt, 
M_InOutLine.EM_Epcg_Grosswt, 
M_InOutLine.EM_Epcg_Netwt, 
M_InOutLine.M_InOut_ID, 
COALESCE(M_InOutLine.IsDescription, 'N') AS IsDescription, 
M_InOutLine.M_InOutLine_ID, 
COALESCE(M_InOutLine.IsActive, 'N') AS IsActive, 
M_InOutLine.AD_Client_ID, 
COALESCE(M_InOutLine.IsInvoiced, 'N') AS IsInvoiced, 
 
        ? AS LANGUAGE 
        FROM M_InOutLine left join (select M_Product_ID, Name from M_Product) table1 on (M_InOutLine.M_Product_ID =  table1.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL1 on (table1.M_Product_ID = tableTRL1.M_Product_ID and tableTRL1.AD_Language = ?)  left join (select M_AttributeSetInstance_ID, Description from M_AttributeSetInstance) table2 on (M_InOutLine.M_AttributeSetInstance_ID = table2.M_AttributeSetInstance_ID) left join (select C_UOM_ID, Name from C_UOM) table3 on (M_InOutLine.C_UOM_ID = table3.C_UOM_ID) left join (select C_UOM_ID,AD_Language, Name from C_UOM_TRL) tableTRL3 on (table3.C_UOM_ID = tableTRL3.C_UOM_ID and tableTRL3.AD_Language = ?)  left join (select M_Locator_ID, Value from M_Locator) table4 on (M_InOutLine.M_Locator_ID = table4.M_Locator_ID) left join (select C_OrderLine_ID, C_Order_ID, Line, LineNetAmt from C_OrderLine) table5 on (M_InOutLine.C_OrderLine_ID = table5.C_OrderLine_ID) left join (select C_Order_ID, DocumentNo, DateOrdered, GrandTotal from C_Order) table6 on (table5.C_Order_ID = table6.C_Order_ID) left join (select M_Product_Uom_Id, C_UOM_ID from M_Product_UOM) table7 on (M_InOutLine.M_Product_Uom_Id =  table7.M_Product_Uom_Id) left join ad_ref_list_v list1 on (table7.C_UOM_ID = list1.value and list1.ad_reference_id = '' and list1.ad_language = ?)  left join (select AD_Org_ID, Name from AD_Org) table8 on (M_InOutLine.AD_Org_ID = table8.AD_Org_ID) left join (select C_Project_ID, Value, Name from C_Project) table9 on (M_InOutLine.C_Project_ID = table9.C_Project_ID)
        WHERE 2=2 

        AND 1=1 
        AND M_InOutLine.M_InOutLine_ID = ? 
        AND M_InOutLine.AD_Client_ID IN ('1') 
           AND M_InOutLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="mInoutId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND M_InOutLine.M_InOut_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_InOutLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_InOutLine.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="mInoutId" id="paramKeyParent"></Parameter>
<Parameter name="aAssetId"></Parameter><Parameter name="emEpcgTarewt"></Parameter><Parameter name="mInoutlineId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="mLocatorId"></Parameter><Parameter name="mLocatorIdr"></Parameter><Parameter name="mProductId"></Parameter><Parameter name="movementqty"></Parameter><Parameter name="description"></Parameter><Parameter name="mConditionGoodsId"></Parameter><Parameter name="line"></Parameter><Parameter name="cOrderlineId"></Parameter><Parameter name="cOrderlineIdr"></Parameter><Parameter name="cUomId"></Parameter><Parameter name="user1Id"></Parameter><Parameter name="emRcloNoofbales"></Parameter><Parameter name="isinvoiced"></Parameter><Parameter name="cCostcenterId"></Parameter><Parameter name="emEpcgNetwt"></Parameter><Parameter name="explode"></Parameter><Parameter name="mProductUomId"></Parameter><Parameter name="quantityorder"></Parameter><Parameter name="mAttributesetinstanceId"></Parameter><Parameter name="mAttributesetinstanceIdr"></Parameter><Parameter name="isdescription"></Parameter><Parameter name="user2Id"></Parameter><Parameter name="canceledInoutlineId"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="emEpcgGrosswt"></Parameter><Parameter name="managePrereservation"></Parameter><Parameter name="bomParentId"></Parameter><Parameter name="cProjectId"></Parameter><Parameter name="cProjectIdr"></Parameter><Parameter name="emEpcgMillsno"></Parameter>
   </SqlMethod>


   <SqlMethod name="selectAux800005" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (CASE COUNT(*) WHEN 0 THEN 0 ELSE 1 END) AS TOTAL FROM M_PRODUCT_UOM WHERE M_PRODUCT_ID=? 
    ]]></Sql>

<Parameter name="M_Product_ID"/>
  </SqlMethod>

   <SqlMethod name="selectAux0AD5488DC1E74A3997B8D9D6C5E16841" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT IsStocked FROM M_PRODUCT WHERE M_PRODUCT_ID = ? 
    ]]></Sql>

<Parameter name="M_PRODUCT_ID"/>
  </SqlMethod>

   <SqlMethod name="selectAux24824516BC4A40CB8E81F52301EF5F8E" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT isBOM FROM M_PRODUCT WHERE M_PRODUCT_ID = ? 
    ]]></Sql>

<Parameter name="M_PRODUCT_ID"/>
  </SqlMethod>

   <SqlMethod name="selectAux44C89F429E0E42F7961A634D61F34E0A" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT POSTED FROM M_INOUT WHERE M_INOUT_ID = ? 
    ]]></Sql>

<Parameter name="M_INOUT_ID"/>
  </SqlMethod>

   <SqlMethod name="selectAux52BCE83D589C498B9803D32847553A8D" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_ATTRIBUTESET_ID FROM M_PRODUCT WHERE M_PRODUCT_ID=? 
    ]]></Sql>

<Parameter name="M_Product_ID"/>
  </SqlMethod>

   <SqlMethod name="selectAux56653DE396CD4C2DBF54D7FA526656D3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT PROCESSED FROM M_INOUT WHERE M_INOUT_ID = ? 
    ]]></Sql>

<Parameter name="M_INOUT_ID"/>
  </SqlMethod>

   <SqlMethod name="selectAux6DDE5291DEB245BAB84FFD042AE66D4C" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_Warehouse_ID FROM M_INOUT WHERE M_INOUT_ID = ? 
    ]]></Sql>

<Parameter name="M_INOUT_ID"/>
  </SqlMethod>

   <SqlMethod name="selectAuxA39F6F19458F478B9B5A87209655A784" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        select max(dt.docbasetype) from m_inout io join c_doctype dt on (io.c_doctype_id = dt.c_doctype_id)
where io.m_inout_id = ? 
    ]]></Sql>

<Parameter name="m_inout_id"/>
  </SqlMethod>

   <SqlMethod name="selectAuxB1CA1E7F4D9547F7B0317146C1742F88" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT ATTRSETVALUETYPE FROM M_PRODUCT WHERE M_PRODUCT_ID=? 
    ]]></Sql>

<Parameter name="M_Product_ID"/>
  </SqlMethod>

   <SqlMethod name="selectAuxF1B30F5F741C4709B745AB64E249F6F9" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
         SELECT AD_ORG_ID
FROM M_INOUT
WHERE M_INOUT_ID = ? 
    ]]></Sql>

<Parameter name="M_INOUT_ID"/>
  </SqlMethod>





   <SqlMethod name="selectDef3534_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as CreatedBy FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3536_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as UpdatedBy FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3537" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_LOCATOR_ID AS DEFAULTVALUE FROM M_LOCATOR WHERE AD_ISORGINCLUDED(?, M_LOCATOR.AD_Org_ID, ?) <> -1 AND ISACTIVE='Y' AND M_WAREHOUSE_ID=?  ORDER BY M_LOCATOR.ISDEFAULT DESC 
    ]]></Sql>

<Parameter name="AD_Org_ID"/>
<Parameter name="AD_Client_ID"/>
<Parameter name="M_WAREHOUSE_ID"/>
  </SqlMethod>

   <SqlMethod name="selectDef3537_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Value), ''))), '') ) as M_Locator_ID FROM M_Locator left join (select M_Locator_ID, Value from M_Locator) table2 on (M_Locator.M_Locator_ID = table2.M_Locator_ID) WHERE M_Locator.isActive='Y' AND M_Locator.M_Locator_ID = ?  
    ]]></Sql>
<Parameter name="M_Locator_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef3810" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT COALESCE(MAX(Line),0)+10 AS DefaultValue FROM M_InOutLine WHERE M_InOut_ID=? 
    ]]></Sql>

<Parameter name="M_InOut_ID"/>
  </SqlMethod>

   <SqlMethod name="selectDef3811_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.DocumentNo), ''))), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(table3.DateOrdered, 'DD-MM-YYYY')), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.GrandTotal), ''))), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Line), ''))), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.LineNetAmt), ''))), '') ) as C_OrderLine_ID FROM C_OrderLine left join (select C_OrderLine_ID, C_Order_ID, Line, LineNetAmt from C_OrderLine) table2 on (C_OrderLine.C_OrderLine_ID = table2.C_OrderLine_ID)left join (select C_Order_ID, DocumentNo, DateOrdered, GrandTotal from C_Order) table3 on (table2.C_Order_ID = table3.C_Order_ID) WHERE C_OrderLine.isActive='Y' AND C_OrderLine.C_OrderLine_ID = ?  
    ]]></Sql>
<Parameter name="C_OrderLine_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef8772_4" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Description), ''))), '') ) as M_AttributeSetInstance_ID FROM M_AttributeSetInstance left join (select M_AttributeSetInstance_ID, Description from M_AttributeSetInstance) table2 on (M_AttributeSetInstance.M_AttributeSetInstance_ID = table2.M_AttributeSetInstance_ID) WHERE M_AttributeSetInstance.isActive='Y' AND M_AttributeSetInstance.M_AttributeSetInstance_ID = ?  
    ]]></Sql>
<Parameter name="M_AttributeSetInstance_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDefF12044E4570546E18AF6834B00961F8E_5" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Value), ''))), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as C_Project_ID FROM C_Project left join (select C_Project_ID, Value, Name from C_Project) table2 on (C_Project.C_Project_ID = table2.C_Project_ID) WHERE C_Project.isActive='Y' AND C_Project.C_Project_ID = ?  
    ]]></Sql>
<Parameter name="C_Project_IDR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_InOutLine.M_InOut_ID AS NAME
        FROM M_InOutLine
        WHERE M_InOutLine.M_InOutLine_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DocumentNo), '')) || ' - ' || TO_CHAR(table1.MovementDate, 'DD-MM-YYYY')) AS NAME FROM M_InOut left join (select M_InOut_ID, DocumentNo, MovementDate from M_InOut) table1 on (M_InOut.M_InOut_ID = table1.M_InOut_ID) WHERE M_InOut.M_InOut_ID = ?  
    ]]></Sql>
<Parameter name="mInoutId"/>

  </SqlMethod>




   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.DocumentNo), '')) || ' - ' || TO_CHAR(table1.MovementDate, 'DD-MM-YYYY')) AS NAME FROM M_InOut left join (select M_InOut_ID, DocumentNo, MovementDate from M_InOut) table1 on (M_InOut.M_InOut_ID = table1.M_InOut_ID) WHERE M_InOut.M_InOut_ID = ?  
    ]]></Sql>
<Parameter name="mInoutId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE M_InOutLine
        SET Line = TO_NUMBER(?) , M_Product_ID = (?) , M_AttributeSetInstance_ID = (?) , M_Condition_Goods_ID = (?) , MovementQty = TO_NUMBER(?) , C_UOM_ID = (?) , EM_Rclo_Noofbales = TO_NUMBER(?) , M_Locator_ID = (?) , EM_Epcg_Millsno = (?) , Description = (?) , C_OrderLine_ID = (?) , M_Product_Uom_Id = (?) , QuantityOrder = TO_NUMBER(?) , Canceled_Inoutline_ID = (?) , Manage_Prereservation = (?) , AD_Org_ID = (?) , C_Bpartner_ID = (?) , C_Project_ID = (?) , C_Costcenter_ID = (?) , A_Asset_ID = (?) , User1_ID = (?) , User2_ID = (?) , Explode = (?) , BOM_Parent_ID = (?) , EM_Epcg_Tarewt = TO_NUMBER(?) , EM_Epcg_Grosswt = TO_NUMBER(?) , EM_Epcg_Netwt = TO_NUMBER(?) , M_InOut_ID = (?) , IsDescription = (?) , M_InOutLine_ID = (?) , IsActive = (?) , AD_Client_ID = (?) , IsInvoiced = (?) , updated = now(), updatedby = ? 
        WHERE M_InOutLine.M_InOutLine_ID = ? 
                 AND M_InOutLine.M_InOut_ID = ? 
        AND M_InOutLine.AD_Client_ID IN ('1') 
        AND M_InOutLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="line"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="mAttributesetinstanceId"></Parameter> <Parameter name="mConditionGoodsId"></Parameter> <Parameter name="movementqty"></Parameter> <Parameter name="cUomId"></Parameter> <Parameter name="emRcloNoofbales"></Parameter> <Parameter name="mLocatorId"></Parameter> <Parameter name="emEpcgMillsno"></Parameter> <Parameter name="description"></Parameter> <Parameter name="cOrderlineId"></Parameter> <Parameter name="mProductUomId"></Parameter> <Parameter name="quantityorder"></Parameter> <Parameter name="canceledInoutlineId"></Parameter> <Parameter name="managePrereservation"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="cCostcenterId"></Parameter> <Parameter name="aAssetId"></Parameter> <Parameter name="user1Id"></Parameter> <Parameter name="user2Id"></Parameter> <Parameter name="explode"></Parameter> <Parameter name="bomParentId"></Parameter> <Parameter name="emEpcgTarewt"></Parameter> <Parameter name="emEpcgGrosswt"></Parameter> <Parameter name="emEpcgNetwt"></Parameter> <Parameter name="mInoutId"></Parameter> <Parameter name="isdescription"></Parameter> <Parameter name="mInoutlineId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="isinvoiced"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mInoutlineId"></Parameter>
    
    <Parameter name="mInoutId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_InOutLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_InOutLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO M_InOutLine 
        (Line, M_Product_ID, M_AttributeSetInstance_ID, M_Condition_Goods_ID, MovementQty, C_UOM_ID, EM_Rclo_Noofbales, M_Locator_ID, EM_Epcg_Millsno, Description, C_OrderLine_ID, M_Product_Uom_Id, QuantityOrder, Canceled_Inoutline_ID, Manage_Prereservation, AD_Org_ID, C_Bpartner_ID, C_Project_ID, C_Costcenter_ID, A_Asset_ID, User1_ID, User2_ID, Explode, BOM_Parent_ID, EM_Epcg_Tarewt, EM_Epcg_Grosswt, EM_Epcg_Netwt, M_InOut_ID, IsDescription, M_InOutLine_ID, IsActive, AD_Client_ID, IsInvoiced, created, createdby, updated, updatedBy)
        VALUES (TO_NUMBER(?), (?), (?), (?), TO_NUMBER(?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="line"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="mAttributesetinstanceId"></Parameter> <Parameter name="mConditionGoodsId"></Parameter> <Parameter name="movementqty"></Parameter> <Parameter name="cUomId"></Parameter> <Parameter name="emRcloNoofbales"></Parameter> <Parameter name="mLocatorId"></Parameter> <Parameter name="emEpcgMillsno"></Parameter> <Parameter name="description"></Parameter> <Parameter name="cOrderlineId"></Parameter> <Parameter name="mProductUomId"></Parameter> <Parameter name="quantityorder"></Parameter> <Parameter name="canceledInoutlineId"></Parameter> <Parameter name="managePrereservation"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="cCostcenterId"></Parameter> <Parameter name="aAssetId"></Parameter> <Parameter name="user1Id"></Parameter> <Parameter name="user2Id"></Parameter> <Parameter name="explode"></Parameter> <Parameter name="bomParentId"></Parameter> <Parameter name="emEpcgTarewt"></Parameter> <Parameter name="emEpcgGrosswt"></Parameter> <Parameter name="emEpcgNetwt"></Parameter> <Parameter name="mInoutId"></Parameter> <Parameter name="isdescription"></Parameter> <Parameter name="mInoutlineId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="isinvoiced"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_InOutLine
        WHERE M_InOutLine.M_InOutLine_ID = ? 
                 AND M_InOutLine.M_InOut_ID = ? 
        AND M_InOutLine.AD_Client_ID IN ('1') 
        AND M_InOutLine.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mInoutId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_InOutLine.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_InOutLine.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM M_InOutLine
         WHERE M_InOutLine.M_InOutLine_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM M_InOutLine
         WHERE M_InOutLine.M_InOutLine_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>