<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="ImportedBankStatementsData" package="org.openbravo.erpWindows.FinancialAccount">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(FIN_BankStatement.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = FIN_BankStatement.CreatedBy) as CreatedByR, 
        to_char(FIN_BankStatement.Updated, ?) as updated, 
        to_char(FIN_BankStatement.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        FIN_BankStatement.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = FIN_BankStatement.UpdatedBy) as UpdatedByR,
        FIN_BankStatement.DocumentNo, 
FIN_BankStatement.C_Doctype_ID, 
(CASE WHEN FIN_BankStatement.C_Doctype_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))),'') ) END) AS C_Doctype_IDR, 
FIN_BankStatement.Name, 
COALESCE(FIN_BankStatement.Isactive, 'N') AS Isactive, 
FIN_BankStatement.Importdate, 
FIN_BankStatement.Statementdate, 
FIN_BankStatement.Filename, 
FIN_BankStatement.FIN_Reconciliation_ID, 
FIN_BankStatement.Notes, 
FIN_BankStatement.Posted, 
list1.name as Posted_BTN, 
FIN_BankStatement.EM_APRM_Process_BS, 
list2.name as EM_APRM_Process_BS_BTN, 
FIN_BankStatement.AD_Org_ID, 
FIN_BankStatement.AD_Client_ID, 
FIN_BankStatement.FIN_Financial_Account_ID, 
COALESCE(FIN_BankStatement.Processing, 'N') AS Processing, 
FIN_BankStatement.FIN_Bankstatement_ID, 
COALESCE(FIN_BankStatement.Processed, 'N') AS Processed, 
 
        ? AS LANGUAGE 
        FROM FIN_BankStatement left join (select C_Doctype_ID, Name from C_Doctype) table1 on (FIN_BankStatement.C_Doctype_ID = table1.C_Doctype_ID) left join (select C_DocType_ID,AD_Language, Name from C_DocType_TRL) tableTRL1 on (table1.C_DocType_ID = tableTRL1.C_DocType_ID and tableTRL1.AD_Language = ?)  left join ad_ref_list_v list1 on (list1.ad_reference_id = '234' and list1.ad_language = ?  AND FIN_BankStatement.Posted = TO_CHAR(list1.value)) left join ad_ref_list_v list2 on (list2.ad_reference_id = 'EC75B6F5A9504DB6B3F3356EA85F15EE' and list2.ad_language = ?  AND FIN_BankStatement.EM_APRM_Process_BS = TO_CHAR(list2.value))
        WHERE 2=2 

        AND 1=1 
        AND FIN_BankStatement.FIN_Bankstatement_ID = ? 
        AND FIN_BankStatement.AD_Client_ID IN ('1') 
           AND FIN_BankStatement.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="finFinancialAccountId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND FIN_BankStatement.FIN_Financial_Account_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_BankStatement.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_BankStatement.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="finFinancialAccountId" id="paramKeyParent"></Parameter>
<Parameter name="posted"></Parameter><Parameter name="postedBtn"></Parameter><Parameter name="finBankstatementId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="documentno"></Parameter><Parameter name="name"></Parameter><Parameter name="notes"></Parameter><Parameter name="cDoctypeId"></Parameter><Parameter name="filename"></Parameter><Parameter name="importdate"></Parameter><Parameter name="statementdate"></Parameter><Parameter name="finReconciliationId"></Parameter><Parameter name="processing"></Parameter><Parameter name="processed"></Parameter><Parameter name="emAprmProcessBs"></Parameter><Parameter name="emAprmProcessBsBtn"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef8189F49FFEA56E56E040007F01003E83_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Createdby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef8189F49FFEA76E56E040007F01003E83_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Updatedby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT FIN_BankStatement.FIN_Financial_Account_ID AS NAME
        FROM FIN_BankStatement
        WHERE FIN_BankStatement.FIN_Bankstatement_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table2.ISO_Code), ''))) AS NAME FROM FIN_Financial_Account left join (select FIN_Financial_Account_ID, Name, C_Currency_ID from FIN_Financial_Account) table1 on (FIN_Financial_Account.FIN_Financial_Account_ID = table1.FIN_Financial_Account_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table2 on (table1.C_Currency_ID = table2.C_Currency_ID) WHERE FIN_Financial_Account.FIN_Financial_Account_ID = ?  
    ]]></Sql>
<Parameter name="finFinancialAccountId"/>

  </SqlMethod>




   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table2.ISO_Code), ''))) AS NAME FROM FIN_Financial_Account left join (select FIN_Financial_Account_ID, Name, C_Currency_ID from FIN_Financial_Account) table1 on (FIN_Financial_Account.FIN_Financial_Account_ID = table1.FIN_Financial_Account_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table2 on (table1.C_Currency_ID = table2.C_Currency_ID) WHERE FIN_Financial_Account.FIN_Financial_Account_ID = ?  
    ]]></Sql>
<Parameter name="finFinancialAccountId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE FIN_BankStatement
        SET DocumentNo = (?) , C_Doctype_ID = (?) , Name = (?) , Isactive = (?) , Importdate = TO_DATE(?) , Statementdate = TO_DATE(?) , Filename = (?) , FIN_Reconciliation_ID = (?) , Notes = (?) , Posted = (?) , EM_APRM_Process_BS = (?) , AD_Org_ID = (?) , AD_Client_ID = (?) , FIN_Financial_Account_ID = (?) , Processing = (?) , FIN_Bankstatement_ID = (?) , Processed = (?) , updated = now(), updatedby = ? 
        WHERE FIN_BankStatement.FIN_Bankstatement_ID = ? 
                 AND FIN_BankStatement.FIN_Financial_Account_ID = ? 
        AND FIN_BankStatement.AD_Client_ID IN ('1') 
        AND FIN_BankStatement.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="documentno"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="importdate"></Parameter> <Parameter name="statementdate"></Parameter> <Parameter name="filename"></Parameter> <Parameter name="finReconciliationId"></Parameter> <Parameter name="notes"></Parameter> <Parameter name="posted"></Parameter> <Parameter name="emAprmProcessBs"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="finFinancialAccountId"></Parameter> <Parameter name="processing"></Parameter> <Parameter name="finBankstatementId"></Parameter> <Parameter name="processed"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="finBankstatementId"></Parameter>
    
    <Parameter name="finFinancialAccountId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_BankStatement.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_BankStatement.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO FIN_BankStatement 
        (DocumentNo, C_Doctype_ID, Name, Isactive, Importdate, Statementdate, Filename, FIN_Reconciliation_ID, Notes, Posted, EM_APRM_Process_BS, AD_Org_ID, AD_Client_ID, FIN_Financial_Account_ID, Processing, FIN_Bankstatement_ID, Processed, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), TO_DATE(?), TO_DATE(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="documentno"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="importdate"></Parameter> <Parameter name="statementdate"></Parameter> <Parameter name="filename"></Parameter> <Parameter name="finReconciliationId"></Parameter> <Parameter name="notes"></Parameter> <Parameter name="posted"></Parameter> <Parameter name="emAprmProcessBs"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="finFinancialAccountId"></Parameter> <Parameter name="processing"></Parameter> <Parameter name="finBankstatementId"></Parameter> <Parameter name="processed"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM FIN_BankStatement
        WHERE FIN_BankStatement.FIN_Bankstatement_ID = ? 
                 AND FIN_BankStatement.FIN_Financial_Account_ID = ? 
        AND FIN_BankStatement.AD_Client_ID IN ('1') 
        AND FIN_BankStatement.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="finFinancialAccountId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_BankStatement.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_BankStatement.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM FIN_BankStatement
         WHERE FIN_BankStatement.FIN_Bankstatement_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM FIN_BankStatement
         WHERE FIN_BankStatement.FIN_Bankstatement_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>