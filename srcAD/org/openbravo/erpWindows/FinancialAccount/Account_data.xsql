<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="AccountData" package="org.openbravo.erpWindows.FinancialAccount">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(FIN_Financial_Account.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = FIN_Financial_Account.CreatedBy) as CreatedByR, 
        to_char(FIN_Financial_Account.Updated, ?) as updated, 
        to_char(FIN_Financial_Account.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        FIN_Financial_Account.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = FIN_Financial_Account.UpdatedBy) as UpdatedByR,
        FIN_Financial_Account.AD_Org_ID, 
(CASE WHEN FIN_Financial_Account.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Org_IDR, 
FIN_Financial_Account.Name, 
FIN_Financial_Account.C_Currency_ID, 
(CASE WHEN FIN_Financial_Account.C_Currency_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.ISO_Code), ''))),'') ) END) AS C_Currency_IDR, 
FIN_Financial_Account.Type, 
(CASE WHEN FIN_Financial_Account.Type IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS TypeR, 
FIN_Financial_Account.Description, 
FIN_Financial_Account.C_Location_ID, 
(CASE WHEN FIN_Financial_Account.C_Location_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Address1), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Address2), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Postal), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.City), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.EM_Epcg_Statecode), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'') ) END) AS C_Location_IDR, 
FIN_Financial_Account.C_Bpartner_ID, 
COALESCE(FIN_Financial_Account.Isactive, 'N') AS Isactive, 
COALESCE(FIN_Financial_Account.Isdefault, 'N') AS Isdefault, 
FIN_Financial_Account.Currentbalance, 
FIN_Financial_Account.Creditlimit, 
FIN_Financial_Account.InitialBalance, 
FIN_Financial_Account.FIN_Matching_Algorithm_ID, 
(CASE WHEN FIN_Financial_Account.FIN_Matching_Algorithm_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table6.Name), ''))),'') ) END) AS FIN_Matching_Algorithm_IDR, 
FIN_Financial_Account.GenericAccountNo, 
FIN_Financial_Account.Iban, 
FIN_Financial_Account.Swiftcode, 
FIN_Financial_Account.INE_Number, 
FIN_Financial_Account.C_Country_ID, 
(CASE WHEN FIN_Financial_Account.C_Country_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL7.Name IS NULL THEN TO_CHAR(table7.Name) ELSE TO_CHAR(tableTRL7.Name) END)), ''))),'') ) END) AS C_Country_IDR, 
FIN_Financial_Account.BankFormat, 
(CASE WHEN FIN_Financial_Account.BankFormat IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list2.name),'') ) END) AS BankFormatR, 
FIN_Financial_Account.Typewriteoff, 
(CASE WHEN FIN_Financial_Account.Typewriteoff IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list3.name),'') ) END) AS TypewriteoffR, 
FIN_Financial_Account.Writeofflimit, 
FIN_Financial_Account.EM_APRM_ImportBankFile, 
FIN_Financial_Account.EM_APRM_MatchTransactions, 
FIN_Financial_Account.EM_APRM_Reconcile, 
FIN_Financial_Account.EM_APRM_AddTransactions, 
FIN_Financial_Account.Codebank, 
FIN_Financial_Account.Codebranch, 
FIN_Financial_Account.Bank_Digitcontrol, 
FIN_Financial_Account.Account_Digitcontrol, 
FIN_Financial_Account.Codeaccount, 
FIN_Financial_Account.Accountno, 
FIN_Financial_Account.AD_Client_ID, 
FIN_Financial_Account.Fin_Financial_Account_ID, 
FIN_Financial_Account.Routingno, 
 
        ? AS LANGUAGE 
        FROM FIN_Financial_Account left join (select AD_Org_ID, Name from AD_Org) table1 on (FIN_Financial_Account.AD_Org_ID = table1.AD_Org_ID) left join (select C_Currency_ID, ISO_Code from C_Currency) table2 on (FIN_Financial_Account.C_Currency_ID = table2.C_Currency_ID) left join ad_ref_list_v list1 on (FIN_Financial_Account.Type = list1.value and list1.ad_reference_id = 'A6BDFA712FF948CE903C4C463E832FC1' and list1.ad_language = ?)  left join (select C_Location_ID, Address1, Address2, Postal, City, C_Region_ID, C_Country_ID from C_Location) table3 on (FIN_Financial_Account.C_Location_ID = table3.C_Location_ID) left join (select C_Region_ID, Name, EM_Epcg_Statecode from C_Region) table4 on (table3.C_Region_ID = table4.C_Region_ID) left join (select C_Country_ID, Name from C_Country) table5 on (table3.C_Country_ID = table5.C_Country_ID) left join (select C_Country_ID,AD_Language, Name from C_Country_TRL) tableTRL5 on (table5.C_Country_ID = tableTRL5.C_Country_ID and tableTRL5.AD_Language = ?)  left join (select FIN_Matching_Algorithm_ID, Name from FIN_Matching_Algorithm) table6 on (FIN_Financial_Account.FIN_Matching_Algorithm_ID = table6.FIN_Matching_Algorithm_ID) left join (select C_Country_ID, Name from C_Country) table7 on (FIN_Financial_Account.C_Country_ID = table7.C_Country_ID) left join (select C_Country_ID,AD_Language, Name from C_Country_TRL) tableTRL7 on (table7.C_Country_ID = tableTRL7.C_Country_ID and tableTRL7.AD_Language = ?)  left join ad_ref_list_v list2 on (FIN_Financial_Account.BankFormat = list2.value and list2.ad_reference_id = 'C123B7BF5B2C438D84D2E509734776B5' and list2.ad_language = ?)  left join ad_ref_list_v list3 on (FIN_Financial_Account.Typewriteoff = list3.value and list3.ad_reference_id = 'C3531F85C14B4515AB7259F0D338050D' and list3.ad_language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND FIN_Financial_Account.Fin_Financial_Account_ID = ? 
        AND FIN_Financial_Account.AD_Client_ID IN ('1') 
           AND FIN_Financial_Account.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Financial_Account.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Financial_Account.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="bankformat"></Parameter><Parameter name="writeofflimit"></Parameter><Parameter name="typewriteoff"></Parameter><Parameter name="initialbalance"></Parameter><Parameter name="cCountryId"></Parameter><Parameter name="finFinancialAccountId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="cCurrencyId"></Parameter><Parameter name="name"></Parameter><Parameter name="description"></Parameter><Parameter name="type"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cLocationId"></Parameter><Parameter name="cLocationIdr"></Parameter><Parameter name="routingno"></Parameter><Parameter name="swiftcode"></Parameter><Parameter name="codebank"></Parameter><Parameter name="codebranch"></Parameter><Parameter name="bankDigitcontrol"></Parameter><Parameter name="ineNumber"></Parameter><Parameter name="accountDigitcontrol"></Parameter><Parameter name="codeaccount"></Parameter><Parameter name="accountno"></Parameter><Parameter name="currentbalance"></Parameter><Parameter name="creditlimit"></Parameter><Parameter name="iban"></Parameter><Parameter name="isdefault"></Parameter><Parameter name="genericaccountno"></Parameter><Parameter name="emAprmImportbankfile"></Parameter><Parameter name="emAprmMatchtransactions"></Parameter><Parameter name="emAprmReconcile"></Parameter><Parameter name="emAprmAddtransactions"></Parameter><Parameter name="finMatchingAlgorithmId"></Parameter>
   </SqlMethod>


   <SqlMethod name="selectAuxA72A59A036BB47B09105AC5C3361C99C" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT count(*) FROM aprm_finacc_transaction_v inner join fin_finacc_transaction ON aprm_finacc_transaction_v.aprm_finacc_transaction_v_id = fin_finacc_transaction.fin_finacc_transaction_id WHERE aprm_finacc_transaction_v.fin_financial_account_id=? 
    ]]></Sql>

<Parameter name="fin_financial_account_id"/>
  </SqlMethod>





   <SqlMethod name="selectDef7891269C8404655DE040007F010155CE_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Createdby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef7891269C8406655DE040007F010155CE_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Updatedby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef828EE0AE80485FA1E040007F010067C7_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Address1), ''))), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Address2), ''))), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Postal), ''))), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.City), ''))), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.EM_Epcg_Statecode), ''))), '')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL4.Name IS NULL THEN TO_CHAR(table4.Name) ELSE TO_CHAR(tableTRL4.Name) END)), ''))), '') ) as C_Location_ID FROM C_Location left join (select C_Location_ID, Address1, Address2, Postal, City, C_Region_ID, C_Country_ID from C_Location) table2 on (C_Location.C_Location_ID = table2.C_Location_ID)left join (select C_Region_ID, Name, EM_Epcg_Statecode from C_Region) table3 on (table2.C_Region_ID = table3.C_Region_ID)left join (select C_Country_ID, Name from C_Country) table4 on (table2.C_Country_ID = table4.C_Country_ID)left join (select C_Country_ID,AD_Language, Name from C_Country_TRL) tableTRL4 on (table4.C_Country_ID = tableTRL4.C_Country_ID and tableTRL4.AD_Language = ?)  WHERE C_Location.isActive='Y' AND C_Location.C_Location_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="C_Location_IDR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE FIN_Financial_Account
        SET AD_Org_ID = (?) , Name = (?) , C_Currency_ID = (?) , Type = (?) , Description = (?) , C_Location_ID = (?) , C_Bpartner_ID = (?) , Isactive = (?) , Isdefault = (?) , Currentbalance = TO_NUMBER(?) , Creditlimit = TO_NUMBER(?) , InitialBalance = TO_NUMBER(?) , FIN_Matching_Algorithm_ID = (?) , GenericAccountNo = (?) , Iban = (?) , Swiftcode = (?) , INE_Number = (?) , C_Country_ID = (?) , BankFormat = (?) , Typewriteoff = (?) , Writeofflimit = TO_NUMBER(?) , EM_APRM_ImportBankFile = (?) , EM_APRM_MatchTransactions = (?) , EM_APRM_Reconcile = (?) , EM_APRM_AddTransactions = (?) , Codebank = (?) , Codebranch = (?) , Bank_Digitcontrol = (?) , Account_Digitcontrol = (?) , Codeaccount = (?) , Accountno = (?) , AD_Client_ID = (?) , Fin_Financial_Account_ID = (?) , Routingno = (?) , updated = now(), updatedby = ? 
        WHERE FIN_Financial_Account.Fin_Financial_Account_ID = ? 
        
        AND FIN_Financial_Account.AD_Client_ID IN ('1') 
        AND FIN_Financial_Account.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="type"></Parameter> <Parameter name="description"></Parameter> <Parameter name="cLocationId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="isdefault"></Parameter> <Parameter name="currentbalance"></Parameter> <Parameter name="creditlimit"></Parameter> <Parameter name="initialbalance"></Parameter> <Parameter name="finMatchingAlgorithmId"></Parameter> <Parameter name="genericaccountno"></Parameter> <Parameter name="iban"></Parameter> <Parameter name="swiftcode"></Parameter> <Parameter name="ineNumber"></Parameter> <Parameter name="cCountryId"></Parameter> <Parameter name="bankformat"></Parameter> <Parameter name="typewriteoff"></Parameter> <Parameter name="writeofflimit"></Parameter> <Parameter name="emAprmImportbankfile"></Parameter> <Parameter name="emAprmMatchtransactions"></Parameter> <Parameter name="emAprmReconcile"></Parameter> <Parameter name="emAprmAddtransactions"></Parameter> <Parameter name="codebank"></Parameter> <Parameter name="codebranch"></Parameter> <Parameter name="bankDigitcontrol"></Parameter> <Parameter name="accountDigitcontrol"></Parameter> <Parameter name="codeaccount"></Parameter> <Parameter name="accountno"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="finFinancialAccountId"></Parameter> <Parameter name="routingno"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="finFinancialAccountId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Financial_Account.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Financial_Account.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO FIN_Financial_Account 
        (AD_Org_ID, Name, C_Currency_ID, Type, Description, C_Location_ID, C_Bpartner_ID, Isactive, Isdefault, Currentbalance, Creditlimit, InitialBalance, FIN_Matching_Algorithm_ID, GenericAccountNo, Iban, Swiftcode, INE_Number, C_Country_ID, BankFormat, Typewriteoff, Writeofflimit, EM_APRM_ImportBankFile, EM_APRM_MatchTransactions, EM_APRM_Reconcile, EM_APRM_AddTransactions, Codebank, Codebranch, Bank_Digitcontrol, Account_Digitcontrol, Codeaccount, Accountno, AD_Client_ID, Fin_Financial_Account_ID, Routingno, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="name"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="type"></Parameter> <Parameter name="description"></Parameter> <Parameter name="cLocationId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="isdefault"></Parameter> <Parameter name="currentbalance"></Parameter> <Parameter name="creditlimit"></Parameter> <Parameter name="initialbalance"></Parameter> <Parameter name="finMatchingAlgorithmId"></Parameter> <Parameter name="genericaccountno"></Parameter> <Parameter name="iban"></Parameter> <Parameter name="swiftcode"></Parameter> <Parameter name="ineNumber"></Parameter> <Parameter name="cCountryId"></Parameter> <Parameter name="bankformat"></Parameter> <Parameter name="typewriteoff"></Parameter> <Parameter name="writeofflimit"></Parameter> <Parameter name="emAprmImportbankfile"></Parameter> <Parameter name="emAprmMatchtransactions"></Parameter> <Parameter name="emAprmReconcile"></Parameter> <Parameter name="emAprmAddtransactions"></Parameter> <Parameter name="codebank"></Parameter> <Parameter name="codebranch"></Parameter> <Parameter name="bankDigitcontrol"></Parameter> <Parameter name="accountDigitcontrol"></Parameter> <Parameter name="codeaccount"></Parameter> <Parameter name="accountno"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="finFinancialAccountId"></Parameter> <Parameter name="routingno"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM FIN_Financial_Account
        WHERE FIN_Financial_Account.Fin_Financial_Account_ID = ? 
        
        AND FIN_Financial_Account.AD_Client_ID IN ('1') 
        AND FIN_Financial_Account.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Financial_Account.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Financial_Account.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM FIN_Financial_Account
         WHERE FIN_Financial_Account.Fin_Financial_Account_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM FIN_Financial_Account
         WHERE FIN_Financial_Account.Fin_Financial_Account_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>