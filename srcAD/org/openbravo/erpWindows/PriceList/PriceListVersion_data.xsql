<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="PriceListVersionData" package="org.openbravo.erpWindows.PriceList">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(M_PriceList_Version.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_PriceList_Version.CreatedBy) as CreatedByR, 
        to_char(M_PriceList_Version.Updated, ?) as updated, 
        to_char(M_PriceList_Version.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        M_PriceList_Version.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_PriceList_Version.UpdatedBy) as UpdatedByR,
        M_PriceList_Version.Name, 
M_PriceList_Version.ValidFrom, 
M_PriceList_Version.M_DiscountSchema_ID, 
(CASE WHEN M_PriceList_Version.M_DiscountSchema_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS M_DiscountSchema_IDR, 
M_PriceList_Version.M_Pricelist_Version_Base_ID, 
(CASE WHEN M_PriceList_Version.M_Pricelist_Version_Base_ID IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS M_Pricelist_Version_Base_IDR, 
M_PriceList_Version.Description, 
COALESCE(M_PriceList_Version.IsActive, 'N') AS IsActive, 
M_PriceList_Version.ProcCreate, 
M_PriceList_Version.M_Pricelist_Version_Generate, 
M_PriceList_Version.M_PriceList_Version_ID, 
M_PriceList_Version.M_PriceList_ID, 
M_PriceList_Version.AD_Client_ID, 
M_PriceList_Version.AD_Org_ID, 
 
        ? AS LANGUAGE 
        FROM M_PriceList_Version left join (select M_DiscountSchema_ID, Name from M_DiscountSchema) table1 on (M_PriceList_Version.M_DiscountSchema_ID = table1.M_DiscountSchema_ID) left join (select M_PriceList_Version_ID, Name from M_PriceList_Version) table2 on (M_PriceList_Version.M_Pricelist_Version_Base_ID =  table2.M_PriceList_Version_ID)
        WHERE 2=2 

        AND 1=1 
        AND M_PriceList_Version.M_PriceList_Version_ID = ? 
        AND M_PriceList_Version.AD_Client_ID IN ('1') 
           AND M_PriceList_Version.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>

    <Parameter name="mPricelistId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND M_PriceList_Version.M_PriceList_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_PriceList_Version.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_PriceList_Version.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="mPricelistId" id="paramKeyParent"></Parameter>
<Parameter name="mPricelistVersionId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="name"></Parameter><Parameter name="description"></Parameter><Parameter name="validfrom"></Parameter><Parameter name="proccreate"></Parameter><Parameter name="mPricelistVersionBaseId"></Parameter><Parameter name="mDiscountschemaId"></Parameter><Parameter name="mPricelistVersionGenerate"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef2992_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as CreatedBy FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef2994_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as UpdatedBy FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT M_PriceList_Version.M_PriceList_ID AS NAME
        FROM M_PriceList_Version
        WHERE M_PriceList_Version.M_PriceList_Version_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM M_PriceList left join (select M_PriceList_ID, Name from M_PriceList) table1 on (M_PriceList.M_PriceList_ID = table1.M_PriceList_ID) WHERE M_PriceList.M_PriceList_ID = ?  
    ]]></Sql>
<Parameter name="mPricelistId"/>

  </SqlMethod>




   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))) AS NAME FROM M_PriceList left join (select M_PriceList_ID, Name from M_PriceList) table1 on (M_PriceList.M_PriceList_ID = table1.M_PriceList_ID) WHERE M_PriceList.M_PriceList_ID = ?  
    ]]></Sql>
<Parameter name="mPricelistId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE M_PriceList_Version
        SET Name = (?) , ValidFrom = TO_DATE(?) , M_DiscountSchema_ID = (?) , M_Pricelist_Version_Base_ID = (?) , Description = (?) , IsActive = (?) , ProcCreate = (?) , M_Pricelist_Version_Generate = (?) , M_PriceList_Version_ID = (?) , M_PriceList_ID = (?) , AD_Client_ID = (?) , AD_Org_ID = (?) , updated = now(), updatedby = ? 
        WHERE M_PriceList_Version.M_PriceList_Version_ID = ? 
                 AND M_PriceList_Version.M_PriceList_ID = ? 
        AND M_PriceList_Version.AD_Client_ID IN ('1') 
        AND M_PriceList_Version.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="name"></Parameter> <Parameter name="validfrom"></Parameter> <Parameter name="mDiscountschemaId"></Parameter> <Parameter name="mPricelistVersionBaseId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="proccreate"></Parameter> <Parameter name="mPricelistVersionGenerate"></Parameter> <Parameter name="mPricelistVersionId"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mPricelistVersionId"></Parameter>
    
    <Parameter name="mPricelistId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_PriceList_Version.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_PriceList_Version.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO M_PriceList_Version 
        (Name, ValidFrom, M_DiscountSchema_ID, M_Pricelist_Version_Base_ID, Description, IsActive, ProcCreate, M_Pricelist_Version_Generate, M_PriceList_Version_ID, M_PriceList_ID, AD_Client_ID, AD_Org_ID, created, createdby, updated, updatedBy)
        VALUES ((?), TO_DATE(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="name"></Parameter> <Parameter name="validfrom"></Parameter> <Parameter name="mDiscountschemaId"></Parameter> <Parameter name="mPricelistVersionBaseId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="proccreate"></Parameter> <Parameter name="mPricelistVersionGenerate"></Parameter> <Parameter name="mPricelistVersionId"></Parameter> <Parameter name="mPricelistId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_PriceList_Version
        WHERE M_PriceList_Version.M_PriceList_Version_ID = ? 
                 AND M_PriceList_Version.M_PriceList_ID = ? 
        AND M_PriceList_Version.AD_Client_ID IN ('1') 
        AND M_PriceList_Version.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mPricelistId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_PriceList_Version.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_PriceList_Version.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM M_PriceList_Version
         WHERE M_PriceList_Version.M_PriceList_Version_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM M_PriceList_Version
         WHERE M_PriceList_Version.M_PriceList_Version_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>