<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="AttendanceImport0917FA308A7647AEAF4BACD18DEF2FABData" package="org.openbravo.erpWindows.com.rcss.humanresource.AttendanceImport">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(RCHR_Attend_Temp.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = RCHR_Attend_Temp.CreatedBy) as CreatedByR, 
        to_char(RCHR_Attend_Temp.Updated, ?) as updated, 
        to_char(RCHR_Attend_Temp.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        RCHR_Attend_Temp.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = RCHR_Attend_Temp.UpdatedBy) as UpdatedByR,
        RCHR_Attend_Temp.AD_Org_ID, 
(CASE WHEN RCHR_Attend_Temp.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Org_IDR, 
COALESCE(RCHR_Attend_Temp.Isactive, 'N') AS Isactive, 
RCHR_Attend_Temp.Attdate, 
TO_CHAR(RCHR_Attend_Temp.Punchin, 'HH24:MI:SS') AS Punchin, 
TO_CHAR(RCHR_Attend_Temp.Punchout, 'HH24:MI:SS') AS Punchout, 
RCHR_Attend_Temp.Duration, 
TO_CHAR(RCHR_Attend_Temp.Breakout, 'HH24:MI:SS') AS Breakout, 
TO_CHAR(RCHR_Attend_Temp.Breakin, 'HH24:MI:SS') AS Breakin, 
RCHR_Attend_Temp.Strshift, 
RCHR_Attend_Temp.Stremployee, 
COALESCE(RCHR_Attend_Temp.Isweeklyoff, 'N') AS Isweeklyoff, 
COALESCE(RCHR_Attend_Temp.Isshiftchangeabsent, 'N') AS Isshiftchangeabsent, 
COALESCE(RCHR_Attend_Temp.Present, 'N') AS Present, 
COALESCE(RCHR_Attend_Temp.Isovertime, 'N') AS Isovertime, 
COALESCE(RCHR_Attend_Temp.Islate, 'N') AS Islate, 
COALESCE(RCHR_Attend_Temp.Nowork, 'N') AS Nowork, 
COALESCE(RCHR_Attend_Temp.Nightshift, 'N') AS Nightshift, 
RCHR_Attend_Temp.Latetime, 
RCHR_Attend_Temp.Errorlog, 
RCHR_Attend_Temp.Validate, 
RCHR_Attend_Temp.Importit, 
COALESCE(RCHR_Attend_Temp.Isvalidated, 'N') AS Isvalidated, 
COALESCE(RCHR_Attend_Temp.Isimported, 'N') AS Isimported, 
COALESCE(RCHR_Attend_Temp.Isflag, 'N') AS Isflag, 
RCHR_Attend_Temp.Rchr_Employee_ID, 
(CASE WHEN RCHR_Attend_Temp.Rchr_Employee_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Punchno), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Employeename), ''))),'') ) END) AS Rchr_Employee_IDR, 
RCHR_Attend_Temp.Rcpr_Shift_ID, 
(CASE WHEN RCHR_Attend_Temp.Rcpr_Shift_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS Rcpr_Shift_IDR, 
RCHR_Attend_Temp.AD_Client_ID, 
RCHR_Attend_Temp.Rchr_Attend_Temp_ID, 
 
        ? AS LANGUAGE 
        FROM RCHR_Attend_Temp left join (select AD_Org_ID, Name from AD_Org) table1 on (RCHR_Attend_Temp.AD_Org_ID = table1.AD_Org_ID) left join (select Rchr_Employee_ID, Punchno, Employeename from Rchr_Employee) table2 on (RCHR_Attend_Temp.Rchr_Employee_ID = table2.Rchr_Employee_ID) left join (select Rcpr_Shift_ID, Name from Rcpr_Shift) table3 on (RCHR_Attend_Temp.Rcpr_Shift_ID = table3.Rcpr_Shift_ID)
        WHERE 2=2 

        AND 1=1 
        AND RCHR_Attend_Temp.Rchr_Attend_Temp_ID = ? 
        AND RCHR_Attend_Temp.AD_Client_ID IN ('1') 
           AND RCHR_Attend_Temp.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="RCHR_Attend_Temp.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="RCHR_Attend_Temp.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(RCHR_Attend_Temp.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = RCHR_Attend_Temp.CreatedBy) as CreatedByR, 
        to_char(RCHR_Attend_Temp.Updated, ?) as updated, 
        to_char(RCHR_Attend_Temp.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        RCHR_Attend_Temp.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = RCHR_Attend_Temp.UpdatedBy) as UpdatedByR, 
        RCHR_Attend_Temp.AD_Org_ID, 
(CASE WHEN RCHR_Attend_Temp.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Org_IDR, 
COALESCE(RCHR_Attend_Temp.Isactive, 'N') AS Isactive, 
RCHR_Attend_Temp.Attdate, 
TO_CHAR(RCHR_Attend_Temp.Punchin, 'HH24:MI:SS') AS Punchin, 
TO_CHAR(RCHR_Attend_Temp.Punchout, 'HH24:MI:SS') AS Punchout, 
RCHR_Attend_Temp.Duration, 
TO_CHAR(RCHR_Attend_Temp.Breakout, 'HH24:MI:SS') AS Breakout, 
TO_CHAR(RCHR_Attend_Temp.Breakin, 'HH24:MI:SS') AS Breakin, 
RCHR_Attend_Temp.Strshift, 
RCHR_Attend_Temp.Stremployee, 
COALESCE(RCHR_Attend_Temp.Isweeklyoff, 'N') AS Isweeklyoff, 
COALESCE(RCHR_Attend_Temp.Isshiftchangeabsent, 'N') AS Isshiftchangeabsent, 
COALESCE(RCHR_Attend_Temp.Present, 'N') AS Present, 
COALESCE(RCHR_Attend_Temp.Isovertime, 'N') AS Isovertime, 
COALESCE(RCHR_Attend_Temp.Islate, 'N') AS Islate, 
COALESCE(RCHR_Attend_Temp.Nowork, 'N') AS Nowork, 
COALESCE(RCHR_Attend_Temp.Nightshift, 'N') AS Nightshift, 
RCHR_Attend_Temp.Latetime, 
RCHR_Attend_Temp.Errorlog, 
RCHR_Attend_Temp.Validate, 
RCHR_Attend_Temp.Importit, 
COALESCE(RCHR_Attend_Temp.Isvalidated, 'N') AS Isvalidated, 
COALESCE(RCHR_Attend_Temp.Isimported, 'N') AS Isimported, 
COALESCE(RCHR_Attend_Temp.Isflag, 'N') AS Isflag, 
RCHR_Attend_Temp.Rchr_Employee_ID, 
(CASE WHEN RCHR_Attend_Temp.Rchr_Employee_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Punchno), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Employeename), ''))),'') ) END) AS Rchr_Employee_IDR, 
RCHR_Attend_Temp.Rcpr_Shift_ID, 
(CASE WHEN RCHR_Attend_Temp.Rcpr_Shift_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS Rcpr_Shift_IDR, 
RCHR_Attend_Temp.AD_Client_ID, 
RCHR_Attend_Temp.Rchr_Attend_Temp_ID, 
 
        '' AS TR_BGCOLOR, '' as total_count,
        ? AS LANGUAGE, '' AS AD_USER_CLIENT, '' AS AD_ORG_CLIENT
        FROM RCHR_Attend_Temp left join (select AD_Org_ID, Name from AD_Org) table1 on (RCHR_Attend_Temp.AD_Org_ID = table1.AD_Org_ID) left join (select Rchr_Employee_ID, Punchno, Employeename from Rchr_Employee) table2 on (RCHR_Attend_Temp.Rchr_Employee_ID = table2.Rchr_Employee_ID) left join (select Rcpr_Shift_ID, Name from Rcpr_Shift) table3 on (RCHR_Attend_Temp.Rcpr_Shift_ID = table3.Rcpr_Shift_ID)
        WHERE 2=2 
        AND 1=1 
        AND RCHR_Attend_Temp.AD_Client_ID IN ('1') 
        AND RCHR_Attend_Temp.AD_Org_ID IN ('1') 

        ORDER BY 1, 1

    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    
    <Parameter name="paramLanguage"></Parameter>
    



    <Parameter name="parAttdate" optional="true" after="1=1 "><![CDATA[ AND RCHR_Attend_Temp.Attdate >= TO_TIMESTAMP(?) ]]></Parameter>

    <Parameter name="parAttdate_f" optional="true" after="1=1 "><![CDATA[ AND RCHR_Attend_Temp.Attdate < TO_TIMESTAMP(?) + 1 ]]></Parameter>


    <Parameter name="parSessionDate" optional="true" type="none" after="1=1 "> AND 1 = 1</Parameter>
    <Parameter name="parSessionUser" optional="true" type="none" after="1=1 "> AND 1 = 1</Parameter>

    <Parameter name="adUserClient" type="replace" optional="true" after="RCHR_Attend_Temp.AD_Client_ID IN (" text="'1'"/>
    <Parameter name="adOrgClient" type="replace" optional="true" after="RCHR_Attend_Temp.AD_Org_ID IN (" text="'1'"/>

    <Parameter name="orderbyclause" optional="true" type="replace" after="ORDER BY " text="1"></Parameter>
  </SqlMethod>
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="isactive"></Parameter><Parameter name="latetime"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="errorlog"></Parameter><Parameter name="isvalidated"></Parameter><Parameter name="punchin"></Parameter><Parameter name="validate"></Parameter><Parameter name="punchout"></Parameter><Parameter name="present"></Parameter><Parameter name="breakin"></Parameter><Parameter name="isovertime"></Parameter><Parameter name="isflag"></Parameter><Parameter name="duration"></Parameter><Parameter name="islate"></Parameter><Parameter name="rcprShiftId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="rchrEmployeeId"></Parameter><Parameter name="isimported"></Parameter><Parameter name="nowork"></Parameter><Parameter name="strshift"></Parameter><Parameter name="breakout"></Parameter><Parameter name="isshiftchangeabsent"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="stremployee"></Parameter><Parameter name="rchrAttendTempId"></Parameter><Parameter name="isweeklyoff"></Parameter><Parameter name="attdate"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="importit"></Parameter><Parameter name="nightshift"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef328E66402A6C4ED0BCDEF017F48BF173_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Createdby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefC07DFA00FC66429FABA1E3E573B802FE_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Updatedby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE RCHR_Attend_Temp
        SET AD_Org_ID = (?) , Isactive = (?) , Attdate = TO_DATE(?) , Punchin = TO_TIMESTAMP(?,'HH24:MI:SS') , Punchout = TO_TIMESTAMP(?,'HH24:MI:SS') , Duration = (?) , Breakout = TO_TIMESTAMP(?,'HH24:MI:SS') , Breakin = TO_TIMESTAMP(?,'HH24:MI:SS') , Strshift = (?) , Stremployee = (?) , Isweeklyoff = (?) , Isshiftchangeabsent = (?) , Present = (?) , Isovertime = (?) , Islate = (?) , Nowork = (?) , Nightshift = (?) , Latetime = TO_NUMBER(?) , Errorlog = (?) , Validate = (?) , Importit = (?) , Isvalidated = (?) , Isimported = (?) , Isflag = (?) , Rchr_Employee_ID = (?) , Rcpr_Shift_ID = (?) , AD_Client_ID = (?) , Rchr_Attend_Temp_ID = (?) , updated = now(), updatedby = ? 
        WHERE RCHR_Attend_Temp.Rchr_Attend_Temp_ID = ? 
        
        AND RCHR_Attend_Temp.AD_Client_ID IN ('1') 
        AND RCHR_Attend_Temp.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="attdate"></Parameter> <Parameter name="punchin"></Parameter> <Parameter name="punchout"></Parameter> <Parameter name="duration"></Parameter> <Parameter name="breakout"></Parameter> <Parameter name="breakin"></Parameter> <Parameter name="strshift"></Parameter> <Parameter name="stremployee"></Parameter> <Parameter name="isweeklyoff"></Parameter> <Parameter name="isshiftchangeabsent"></Parameter> <Parameter name="present"></Parameter> <Parameter name="isovertime"></Parameter> <Parameter name="islate"></Parameter> <Parameter name="nowork"></Parameter> <Parameter name="nightshift"></Parameter> <Parameter name="latetime"></Parameter> <Parameter name="errorlog"></Parameter> <Parameter name="validate"></Parameter> <Parameter name="importit"></Parameter> <Parameter name="isvalidated"></Parameter> <Parameter name="isimported"></Parameter> <Parameter name="isflag"></Parameter> <Parameter name="rchrEmployeeId"></Parameter> <Parameter name="rcprShiftId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="rchrAttendTempId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="rchrAttendTempId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="RCHR_Attend_Temp.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="RCHR_Attend_Temp.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO RCHR_Attend_Temp 
        (AD_Org_ID, Isactive, Attdate, Punchin, Punchout, Duration, Breakout, Breakin, Strshift, Stremployee, Isweeklyoff, Isshiftchangeabsent, Present, Isovertime, Islate, Nowork, Nightshift, Latetime, Errorlog, Validate, Importit, Isvalidated, Isimported, Isflag, Rchr_Employee_ID, Rcpr_Shift_ID, AD_Client_ID, Rchr_Attend_Temp_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), TO_DATE(?), TO_TIMESTAMP(?, 'HH24:MI:SS'), TO_TIMESTAMP(?, 'HH24:MI:SS'), (?), TO_TIMESTAMP(?, 'HH24:MI:SS'), TO_TIMESTAMP(?, 'HH24:MI:SS'), (?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="attdate"></Parameter> <Parameter name="punchin"></Parameter> <Parameter name="punchout"></Parameter> <Parameter name="duration"></Parameter> <Parameter name="breakout"></Parameter> <Parameter name="breakin"></Parameter> <Parameter name="strshift"></Parameter> <Parameter name="stremployee"></Parameter> <Parameter name="isweeklyoff"></Parameter> <Parameter name="isshiftchangeabsent"></Parameter> <Parameter name="present"></Parameter> <Parameter name="isovertime"></Parameter> <Parameter name="islate"></Parameter> <Parameter name="nowork"></Parameter> <Parameter name="nightshift"></Parameter> <Parameter name="latetime"></Parameter> <Parameter name="errorlog"></Parameter> <Parameter name="validate"></Parameter> <Parameter name="importit"></Parameter> <Parameter name="isvalidated"></Parameter> <Parameter name="isimported"></Parameter> <Parameter name="isflag"></Parameter> <Parameter name="rchrEmployeeId"></Parameter> <Parameter name="rcprShiftId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="rchrAttendTempId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM RCHR_Attend_Temp
        WHERE RCHR_Attend_Temp.Rchr_Attend_Temp_ID = ? 
        
        AND RCHR_Attend_Temp.AD_Client_ID IN ('1') 
        AND RCHR_Attend_Temp.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="RCHR_Attend_Temp.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="RCHR_Attend_Temp.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM RCHR_Attend_Temp
         WHERE RCHR_Attend_Temp.Rchr_Attend_Temp_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM RCHR_Attend_Temp
         WHERE RCHR_Attend_Temp.Rchr_Attend_Temp_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>