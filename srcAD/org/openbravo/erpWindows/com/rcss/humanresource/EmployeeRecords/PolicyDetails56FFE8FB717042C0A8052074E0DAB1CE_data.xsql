<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="PolicyDetails56FFE8FB717042C0A8052074E0DAB1CEData" package="org.openbravo.erpWindows.com.rcss.humanresource.EmployeeRecords">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(RCHR_Emp_Policy.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = RCHR_Emp_Policy.CreatedBy) as CreatedByR, 
        to_char(RCHR_Emp_Policy.Updated, ?) as updated, 
        to_char(RCHR_Emp_Policy.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        RCHR_Emp_Policy.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = RCHR_Emp_Policy.UpdatedBy) as UpdatedByR,
        RCHR_Emp_Policy.AD_Org_ID, 
COALESCE(RCHR_Emp_Policy.Isactive, 'N') AS Isactive, 
RCHR_Emp_Policy.Rchr_Employee_ID, 
RCHR_Emp_Policy.RCHR_Policy_ID, 
(CASE WHEN RCHR_Emp_Policy.RCHR_Policy_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS RCHR_Policy_IDR, 
RCHR_Emp_Policy.Policyno, 
RCHR_Emp_Policy.Policyfrom, 
RCHR_Emp_Policy.Policyto, 
RCHR_Emp_Policy.Permiumperyear, 
RCHR_Emp_Policy.Paymenttype, 
(CASE WHEN RCHR_Emp_Policy.Paymenttype IS NULL THEN '' ELSE  ( COALESCE(TO_CHAR(list1.name),'') ) END) AS PaymenttypeR, 
RCHR_Emp_Policy.Process, 
RCHR_Emp_Policy.Policyissuername, 
RCHR_Emp_Policy.RCHR_Emp_Policy_ID, 
RCHR_Emp_Policy.AD_Client_ID, 
 
        ? AS LANGUAGE 
        FROM RCHR_Emp_Policy left join (select RCHR_Policy_ID, Name from RCHR_Policy) table1 on (RCHR_Emp_Policy.RCHR_Policy_ID = table1.RCHR_Policy_ID) left join ad_ref_list_v list1 on (RCHR_Emp_Policy.Paymenttype = list1.value and list1.ad_reference_id = 'D6C1A180D47641E4A63CAC418FCCCC05' and list1.ad_language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND RCHR_Emp_Policy.RCHR_Emp_Policy_ID = ? 
        AND RCHR_Emp_Policy.AD_Client_ID IN ('1') 
           AND RCHR_Emp_Policy.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="rchrEmployeeId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND RCHR_Emp_Policy.Rchr_Employee_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="RCHR_Emp_Policy.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="RCHR_Emp_Policy.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="rchrEmployeeId" id="paramKeyParent"></Parameter>
<Parameter name="policyno"></Parameter><Parameter name="policyto"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="process"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="permiumperyear"></Parameter><Parameter name="isactive"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="paymenttype"></Parameter><Parameter name="rchrEmpPolicyId"></Parameter><Parameter name="rchrPolicyId"></Parameter><Parameter name="policyissuername"></Parameter><Parameter name="policyfrom"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef34B9AF1716CD4490B357AD1940AA04DB_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Updatedby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef6194C1332CE34D9FA96876BEC3446A1F_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Createdby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT RCHR_Emp_Policy.Rchr_Employee_ID AS NAME
        FROM RCHR_Emp_Policy
        WHERE RCHR_Emp_Policy.RCHR_Emp_Policy_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Punchno), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Employeename), ''))) AS NAME FROM Rchr_Employee left join (select Rchr_Employee_ID, Punchno, Employeename from Rchr_Employee) table1 on (Rchr_Employee.Rchr_Employee_ID = table1.Rchr_Employee_ID) WHERE Rchr_Employee.Rchr_Employee_ID = ?  
    ]]></Sql>
<Parameter name="rchrEmployeeId"/>

  </SqlMethod>




   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Punchno), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Employeename), ''))) AS NAME FROM Rchr_Employee left join (select Rchr_Employee_ID, Punchno, Employeename from Rchr_Employee) table1 on (Rchr_Employee.Rchr_Employee_ID = table1.Rchr_Employee_ID) WHERE Rchr_Employee.Rchr_Employee_ID = ?  
    ]]></Sql>
<Parameter name="rchrEmployeeId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE RCHR_Emp_Policy
        SET AD_Org_ID = (?) , Isactive = (?) , Rchr_Employee_ID = (?) , RCHR_Policy_ID = (?) , Policyno = (?) , Policyfrom = TO_DATE(?) , Policyto = TO_DATE(?) , Permiumperyear = TO_NUMBER(?) , Paymenttype = (?) , Process = (?) , Policyissuername = (?) , RCHR_Emp_Policy_ID = (?) , AD_Client_ID = (?) , updated = now(), updatedby = ? 
        WHERE RCHR_Emp_Policy.RCHR_Emp_Policy_ID = ? 
                 AND RCHR_Emp_Policy.Rchr_Employee_ID = ? 
        AND RCHR_Emp_Policy.AD_Client_ID IN ('1') 
        AND RCHR_Emp_Policy.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="rchrEmployeeId"></Parameter> <Parameter name="rchrPolicyId"></Parameter> <Parameter name="policyno"></Parameter> <Parameter name="policyfrom"></Parameter> <Parameter name="policyto"></Parameter> <Parameter name="permiumperyear"></Parameter> <Parameter name="paymenttype"></Parameter> <Parameter name="process"></Parameter> <Parameter name="policyissuername"></Parameter> <Parameter name="rchrEmpPolicyId"></Parameter> <Parameter name="adClientId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="rchrEmpPolicyId"></Parameter>
    
    <Parameter name="rchrEmployeeId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="RCHR_Emp_Policy.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="RCHR_Emp_Policy.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO RCHR_Emp_Policy 
        (AD_Org_ID, Isactive, Rchr_Employee_ID, RCHR_Policy_ID, Policyno, Policyfrom, Policyto, Permiumperyear, Paymenttype, Process, Policyissuername, RCHR_Emp_Policy_ID, AD_Client_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), TO_DATE(?), TO_DATE(?), TO_NUMBER(?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="rchrEmployeeId"></Parameter> <Parameter name="rchrPolicyId"></Parameter> <Parameter name="policyno"></Parameter> <Parameter name="policyfrom"></Parameter> <Parameter name="policyto"></Parameter> <Parameter name="permiumperyear"></Parameter> <Parameter name="paymenttype"></Parameter> <Parameter name="process"></Parameter> <Parameter name="policyissuername"></Parameter> <Parameter name="rchrEmpPolicyId"></Parameter> <Parameter name="adClientId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM RCHR_Emp_Policy
        WHERE RCHR_Emp_Policy.RCHR_Emp_Policy_ID = ? 
                 AND RCHR_Emp_Policy.Rchr_Employee_ID = ? 
        AND RCHR_Emp_Policy.AD_Client_ID IN ('1') 
        AND RCHR_Emp_Policy.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="rchrEmployeeId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="RCHR_Emp_Policy.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="RCHR_Emp_Policy.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM RCHR_Emp_Policy
         WHERE RCHR_Emp_Policy.RCHR_Emp_Policy_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM RCHR_Emp_Policy
         WHERE RCHR_Emp_Policy.RCHR_Emp_Policy_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>