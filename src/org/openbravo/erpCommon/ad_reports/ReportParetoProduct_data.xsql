<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SLU 
 * All portions are Copyright (C) 2001-2012 Openbravo SLU 
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->





<SqlClass name="ReportParetoProductData" package="org.openbravo.erpCommon.ad_reports">
  <SqlClassComment></SqlClassComment>
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      select orgid, searchkey, name, unit, qty, cost, value, percentage,
      m_get_pareto_abc(?, ad_org_id, ?, percentage) as isabc, '' as padre, '' as id
      from (
        select ad_column_identifier('AD_Org', ad_org_id, ?) as orgid,
          value as searchkey, name as name,
          ad_column_identifier('C_Uom', c_uom_id, ?) as unit,
          ad_org_id, m_product_id, sum(movementqty) as qty,
          sum(value_per_currency)/sum(movementqty) as cost, 
          sum(value_per_currency) as value, 
          100 * sum(value_per_currency) / (select sum(cost_per_currency)
                             from (
                                  select c_currency_convert_precision(sum(case when t.movementqty>=0 then tc.cost else -tc.cost end),
                                         tc.c_currency_id, ?, to_date(now()), null, ?, ad_get_org_le_bu (w.ad_org_id, 'LE')) as cost_per_currency,
                                         sum(t.movementqty) as movementqty, w.m_warehouse_id
                                  from m_transaction_cost tc, m_transaction t
                                    left join m_locator l on (t.m_locator_id=l.m_locator_id)
                                    left join m_warehouse w on (l.m_warehouse_id=w.m_warehouse_id)
                                  where tc.m_transaction_id = t.m_transaction_id
                                    and t.iscostcalculated = 'Y'
                                    and t.transactioncost is not null
                                    and t.ad_client_id = ?
                                    and 1=1
                                    and 2=2
                                    AND ad_isorgincluded(w.AD_ORG_ID, ?, w.ad_client_id) <> -1
                                  group by tc.c_currency_id, w.ad_org_id, w.ad_client_id, w.m_warehouse_id
                                ) a
                              where a.m_warehouse_id = warehouse
                              having sum(a.movementqty)>0
                            ) as percentage
        from (
          select w.ad_org_id, p.value, p.name, p.c_uom_id, sum(t.movementqty) as movementqty, p.m_product_id, w.m_warehouse_id as warehouse,
                 c_currency_convert_precision(sum(case when t.movementqty>=0 then tc.cost else -tc.cost end),
                 tc.c_currency_id, ?, to_date(now()), null, ?, ad_get_org_le_bu (w.ad_org_id, 'LE')) as value_per_currency
          from m_transaction_cost tc, m_transaction t, m_locator l, m_warehouse w, m_product p
          where tc.m_transaction_id = t.m_transaction_id
            and t.m_locator_id = l.m_locator_id
            and l.m_warehouse_id = w.m_warehouse_id
            and t.m_product_id = p.m_product_id
            and t.iscostcalculated = 'Y'
            and t.transactioncost is not null
            and t.ad_client_id=?
            and w.ad_client_id=t.ad_client_id
            and 3=3
            and 4=4
            AND ad_isorgincluded(w.AD_ORG_ID, ?, w.ad_client_id) <> -1
          group by w.ad_org_id, w.ad_client_id, p.m_product_id, tc.c_currency_id, p.name, p.value, p.c_uom_id, w.m_warehouse_id
          having sum(t.movementqty) > 0
        ) a
        group by ad_org_id, m_product_id, name, value, c_uom_id, warehouse
        order by orgid, percentage desc
      ) b
    ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="mWarehouseId"/>
    <Parameter name="adClientId"/>
    <Parameter name="language"/>
    <Parameter name="language"/>
    <Parameter name="cCurrencyConv"/> 
    <Parameter name="adClientId"/>
    <Parameter name="adClientId"/>
    <Parameter name="mWarehouseId" optional="true" after="1=1" text=" AND l.M_WAREHOUSE_ID = ? "/>
    <Parameter name="adOrgId"/>
    <Parameter name="cCurrencyConv"/> 
    <Parameter name="adClientId"/>
    <Parameter name="adClientId"/>
    <Parameter name="mWarehouseId" optional="true" after="3=3" text=" AND l.M_WAREHOUSE_ID = ? "/>    
    <Parameter name="adOrgId"/>
  </SqlMethod>

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql></Sql>
  </SqlMethod>

  <SqlMethod name="selectWarehouseDouble" type="preparedStatement" return="Multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT M_WAREHOUSE.AD_ORG_ID AS PADRE, M_WAREHOUSE.M_WAREHOUSE_ID AS ID, TO_CHAR(M_WAREHOUSE.NAME) AS NAME
        FROM M_WAREHOUSE
        WHERE 1=1
         AND M_WAREHOUSE.AD_Client_ID IN('1')
         UNION 
        SELECT null AS PADRE, M_WAREHOUSE.M_WAREHOUSE_ID AS ID, TO_CHAR(M_WAREHOUSE.NAME) AS NAME
        FROM M_WAREHOUSE
        WHERE 2=2 AND M_WAREHOUSE.AD_Client_ID IN('1')    
        ORDER BY PADRE, NAME
      ]]></Sql>
    <Parameter name="adUserClient" type="replace" optional="true" after="M_WAREHOUSE.AD_Client_ID IN(" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after=" 2=2 AND M_WAREHOUSE.AD_Client_ID IN(" text="'1'"/>    
  </SqlMethod> 
    
  <SqlMethod name="mUpdateParetoProduct0" type="callableStatement" return="object" object="ReportParetoProductData">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        CALL M_UPDATE_PARETO_PRODUCT0(?)
      ]]></Sql>
      <Parameter name="adPinstanceId"/>    
   </SqlMethod>
</SqlClass>
