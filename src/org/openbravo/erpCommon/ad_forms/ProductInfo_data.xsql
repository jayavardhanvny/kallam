<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ******************************************************************************
 * The contents of this file are subject to the   Compiere License  Version 1.1
 * ("License"); You may not use this file except in compliance with the License
 * You may obtain a copy of the License at http://www.compiere.org/license.html
 * Software distributed under the License is distributed on an  "AS IS"  basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 * The Original Code is                  Compiere  ERP & CRM  Business Solution
 * The Initial Developer of the Original Code is Jorg Janke  and ComPiere, Inc.
 * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke, parts
 * created by ComPiere are Copyright (C) ComPiere, Inc.;   All Rights Reserved.
 * Contributor(s): Openbravo SLU
 * Contributions are Copyright (C) 2001-2012 Openbravo S.L.U.
 ******************************************************************************
-->





<SqlClass name="ProductInfoData" package="org.openbravo.erpCommon.ad_forms">
  <SqlClassComment></SqlClassComment>
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
  SELECT P.PRODUCTTYPE, PC.VALUE,P.C_UOM_ID,P.AD_CLIENT_ID,P.AD_ORG_ID,
  '' AS REVENUE, '' AS REVENUERETURN, '' AS EXPENSE, '' AS ASSET, '' AS COGS, '' AS COGSRETURN, '' AS PURCHASEPRICEVARIANCE, '' AS INVOICEPRICEVARIANCE,
  '' AS DISCOUNTREC, '' AS DISCOUNTGRANT, '' AS DEFREVENUE, '' AS DEFEXPENSE,'' AS CONVERTED, '' AS CURRENTCOSTPRICE, '' AS COSTAVERAGE, '' AS PRICELASTPO,
  '' AS COSTSTANDARD, '' AS C_CURRENCY_ID, '' AS PRICELIST, '' AS PRICESTD, '' AS PRICELIMIT, '' AS PRICEPO
  FROM M_PRODUCT_CATEGORY PC, M_PRODUCT P 
  WHERE PC.M_PRODUCT_CATEGORY_ID=P.M_PRODUCT_CATEGORY_ID
  AND P.M_PRODUCT_ID=?
     ]]>
     </Sql>
     <Parameter name="Product"/>
   </SqlMethod>
  <SqlMethod name="selectProductAcct" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
  SELECT P_Revenue_Acct as revenue, P_Revenue_Return_Acct as revenuereturn, P_Expense_Acct as expense, P_Asset_Acct as asset, P_Cogs_Acct as cogs, 
  P_Cogs_Return_Acct as cogsreturn, P_PurchasePriceVariance_Acct as purchasepricevariance, P_InvoicePriceVariance_Acct as invoicepricevariance, 
  P_TradeDiscountRec_Acct as discountrec, P_TradeDiscountGrant_Acct as discountgrant, P_Def_Revenue_Acct as defrevenue, P_Def_Expense_Acct as defexpense
  FROM M_Product_Acct
  WHERE M_Product_ID=? 
  AND C_AcctSchema_ID=?
     ]]>
     </Sql>
     <Parameter name="Product"/>
     <Parameter name="AcctSchema"/>
   </SqlMethod>
  <SqlMethod name="selectDefaultAcct" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      SELECT coalesce(acctsdef.P_Revenue_Acct, pca.P_Revenue_Acct) as revenue, coalesce(acctsdef.P_Revenue_Return_Acct, pca.P_Revenue_Return_Acct) as revenuereturn,
             coalesce(acctsdef.P_Expense_Acct, pca.P_Expense_Acct) as expense, coalesce(acctsdef.P_Asset_Acct, pca.P_Asset_Acct) as asset, 
             coalesce(acctsdef.P_Cogs_Acct, pca.P_Cogs_Acct) as cogs, coalesce(acctsdef.P_Cogs_Return_Acct, pca.P_Cogs_Return_Acct) as cogsreturn,
             coalesce(acctsdef.P_PurchasePriceVariance_Acct, pca.P_PurchasePriceVariance_Acct) as purchasepricevariance,
             coalesce(acctsdef.P_InvoicePriceVariance_Acct, pca.P_InvoicePriceVariance_Acct) as invoicepricevariance,
             coalesce(acctsdef.P_TradeDiscountRec_Acct, pca.P_TradeDiscountRec_Acct) as discountrec,
             coalesce(acctsdef.P_TradeDiscountGrant_Acct, pca.P_TradeDiscountGrant_Acct) as discountgrant
      FROM M_Product_Category pc, M_Product_Category_Acct pca, c_acctschema_default acctsdef
      WHERE pc.M_Product_Category_ID = pca.M_Product_Category_ID 
            AND pca.c_acctschema_id = acctsdef.c_acctschema_id
            AND pca.C_AcctSchema_ID= ?
      ORDER BY pc.isdefault desc, pc.created
     ]]>
     </Sql>
     <Parameter name="AcctSchema"/>
   </SqlMethod>
   <SqlMethod name="UOMConvert" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
        select C_UOM_Convert (TO_NUMBER(?), ?, ?, ?) as converted from dual
      </Sql>
      <Parameter name="qty"/>
      <Parameter name="C_UOM_From_ID"/>
      <Parameter name="C_UOM_To_ID"/>
      <Parameter name="StdPrecision"/>
   </SqlMethod>
   <SqlMethod name="selectProductAverageCost" type="preparedStatement" return="string">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
        SELECT COALESCE(M_GET_PRODUCT_COST(?, TO_DATE(?), TO_CHAR(NULL)),0) FROM DUAL
      </Sql>
      <Parameter name="M_Product_ID"/>
      <Parameter name="date"/>
   </SqlMethod>
   </SqlClass>
